{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_question",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_proposals",
          "type": "string[]"
        },
        {
          "internalType": "string",
          "name": "_img",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_link",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "GETwinnerProposal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ],
          "internalType": "struct Pool.Proposal",
          "name": "winnerP_",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetQuestion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_voter",
          "type": "address"
        }
      ],
      "name": "addVoter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProposalsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "img_ipfs",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "link",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "question",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposal",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "voters",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "voted",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "vote_proposal",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winnerProposalName",
      "outputs": [
        {
          "internalType": "string",
          "name": "winnerName_",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winningProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "winningProposal_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/Pool.sol"
  },
  "ast": {
    "absolutePath": "contracts/Pool.sol",
    "exportedSymbols": {
      "Pool": [
        422
      ]
    },
    "id": 423,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 153,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".2",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:31:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Pool",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 422,
        "linearizedBaseContracts": [
          422
        ],
        "name": "Pool",
        "nameLocation": "80:4:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "3fad9ae0",
            "id": 155,
            "mutability": "mutable",
            "name": "question",
            "nameLocation": "106:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 422,
            "src": "92:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 154,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "92:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 157,
            "mutability": "mutable",
            "name": "deploy_time",
            "nameLocation": "126:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 422,
            "src": "121:16:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 156,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "121:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 159,
            "mutability": "mutable",
            "name": "start",
            "nameLocation": "148:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 422,
            "src": "143:10:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 158,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "143:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 161,
            "mutability": "mutable",
            "name": "end",
            "nameLocation": "164:3:1",
            "nodeType": "VariableDeclaration",
            "scope": 422,
            "src": "159:8:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 160,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "159:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "1bce8b4f",
            "id": 163,
            "mutability": "mutable",
            "name": "img_ipfs",
            "nameLocation": "187:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 422,
            "src": "173:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 162,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "173:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1c4695f4",
            "id": 165,
            "mutability": "mutable",
            "name": "link",
            "nameLocation": "215:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 422,
            "src": "201:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 164,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "201:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Pool.Proposal",
            "id": 170,
            "members": [
              {
                "constant": false,
                "id": 167,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "259:4:1",
                "nodeType": "VariableDeclaration",
                "scope": 170,
                "src": "252:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 166,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "252:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 169,
                "mutability": "mutable",
                "name": "count",
                "nameLocation": "278:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 170,
                "src": "273:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 168,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "273:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nameLocation": "233:8:1",
            "nodeType": "StructDefinition",
            "scope": 422,
            "src": "226:64:1",
            "visibility": "public"
          },
          {
            "canonicalName": "Pool.Voter",
            "id": 177,
            "members": [
              {
                "constant": false,
                "id": 172,
                "mutability": "mutable",
                "name": "weight",
                "nameLocation": "324:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 177,
                "src": "319:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 171,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "319:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 174,
                "mutability": "mutable",
                "name": "voted",
                "nameLocation": "384:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 177,
                "src": "379:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 173,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "379:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 176,
                "mutability": "mutable",
                "name": "vote_proposal",
                "nameLocation": "443:13:1",
                "nodeType": "VariableDeclaration",
                "scope": 177,
                "src": "438:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 175,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "438:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Voter",
            "nameLocation": "303:5:1",
            "nodeType": "StructDefinition",
            "scope": 422,
            "src": "296:201:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "013cf08b",
            "id": 181,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "521:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 422,
            "src": "503:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Proposal_$170_storage_$dyn_storage",
              "typeString": "struct Pool.Proposal[]"
            },
            "typeName": {
              "baseType": {
                "id": 179,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 178,
                  "name": "Proposal",
                  "nameLocations": [
                    "503:8:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 170,
                  "src": "503:8:1"
                },
                "referencedDeclaration": 170,
                "src": "503:8:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$170_storage_ptr",
                  "typeString": "struct Pool.Proposal"
                }
              },
              "id": 180,
              "nodeType": "ArrayTypeName",
              "src": "503:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Proposal_$170_storage_$dyn_storage_ptr",
                "typeString": "struct Pool.Proposal[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a3ec138d",
            "id": 186,
            "mutability": "mutable",
            "name": "voters",
            "nameLocation": "570:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 422,
            "src": "537:39:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$177_storage_$",
              "typeString": "mapping(address => struct Pool.Voter)"
            },
            "typeName": {
              "id": 185,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 182,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "545:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "537:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$177_storage_$",
                "typeString": "mapping(address => struct Pool.Voter)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 184,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 183,
                  "name": "Voter",
                  "nameLocations": [
                    "556:5:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 177,
                  "src": "556:5:1"
                },
                "referencedDeclaration": 177,
                "src": "556:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Voter_$177_storage_ptr",
                  "typeString": "struct Pool.Voter"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 196,
              "nodeType": "Block",
              "src": "600:58:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 189,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "618:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "624:9:1",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "618:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 191,
                          "name": "end",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "636:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "618:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 188,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "610:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "610:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "610:30:1"
                },
                {
                  "id": 195,
                  "nodeType": "PlaceholderStatement",
                  "src": "650:1:1"
                }
              ]
            },
            "id": 197,
            "name": "timer",
            "nameLocation": "592:5:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "597:2:1"
            },
            "src": "583:75:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 262,
              "nodeType": "Block",
              "src": "771:379:1",
              "statements": [
                {
                  "expression": {
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 209,
                      "name": "question",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "781:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 210,
                      "name": "_question",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "792:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "781:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "781:20:1"
                },
                {
                  "expression": {
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 213,
                      "name": "deploy_time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "811:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 214,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "825:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "831:9:1",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "825:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "811:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "811:29:1"
                },
                {
                  "expression": {
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 218,
                      "name": "start",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "850:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 219,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "858:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "864:9:1",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "858:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "850:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "850:23:1"
                },
                {
                  "expression": {
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 223,
                      "name": "end",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "883:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 224,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "889:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "895:9:1",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "889:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3234",
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "907:8:1",
                        "subdenomination": "hours",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "24"
                      },
                      "src": "889:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "883:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "883:32:1"
                },
                {
                  "expression": {
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 230,
                      "name": "img_ipfs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "925:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 231,
                      "name": "_img",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 204,
                      "src": "936:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "925:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 233,
                  "nodeType": "ExpressionStatement",
                  "src": "925:15:1"
                },
                {
                  "expression": {
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 234,
                      "name": "link",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "950:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 235,
                      "name": "_link",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 206,
                      "src": "957:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "950:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "950:12:1"
                },
                {
                  "body": {
                    "id": 260,
                    "nodeType": "Block",
                    "src": "1016:128:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 253,
                                    "name": "_proposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 202,
                                    "src": "1078:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 255,
                                  "indexExpression": {
                                    "id": 254,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 239,
                                    "src": "1089:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1078:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 256,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1116:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 252,
                                "name": "Proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 170,
                                "src": "1045:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Proposal_$170_storage_ptr_$",
                                  "typeString": "type(struct Pool.Proposal storage pointer)"
                                }
                              },
                              "id": 257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "1072:4:1",
                                "1109:5:1"
                              ],
                              "names": [
                                "name",
                                "count"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "1045:87:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$170_memory_ptr",
                                "typeString": "struct Pool.Proposal memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Proposal_$170_memory_ptr",
                                "typeString": "struct Pool.Proposal memory"
                              }
                            ],
                            "expression": {
                              "id": 249,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 181,
                              "src": "1030:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Proposal_$170_storage_$dyn_storage",
                                "typeString": "struct Pool.Proposal storage ref[] storage ref"
                              }
                            },
                            "id": 251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1040:4:1",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1030:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$170_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$170_storage_$returns$__$attached_to$_t_array$_t_struct$_Proposal_$170_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct Pool.Proposal storage ref[] storage pointer,struct Pool.Proposal storage ref)"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1030:103:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 259,
                        "nodeType": "ExpressionStatement",
                        "src": "1030:103:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 242,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 239,
                      "src": "989:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 243,
                        "name": "_proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "993:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1004:6:1",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "993:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "989:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 261,
                  "initializationExpression": {
                    "assignments": [
                      239
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 239,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "984:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "979:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 238,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "979:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 241,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "986:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "979:8:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1012:3:1",
                      "subExpression": {
                        "id": 246,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 239,
                        "src": "1012:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 248,
                    "nodeType": "ExpressionStatement",
                    "src": "1012:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "974:170:1"
                }
              ]
            },
            "id": 263,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "mutability": "mutable",
                  "name": "_question",
                  "nameLocation": "692:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "678:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "678:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "_proposals",
                  "nameLocation": "719:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "703:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 200,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "703:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 201,
                    "nodeType": "ArrayTypeName",
                    "src": "703:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 204,
                  "mutability": "mutable",
                  "name": "_img",
                  "nameLocation": "745:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "731:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "731:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "_link",
                  "nameLocation": "765:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "751:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "751:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "677:94:1"
            },
            "returnParameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "771:0:1"
            },
            "scope": 422,
            "src": "665:485:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 283,
              "nodeType": "Block",
              "src": "1197:86:1",
              "statements": [
                {
                  "assignments": [
                    270
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 270,
                      "mutability": "mutable",
                      "name": "voter",
                      "nameLocation": "1220:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 283,
                      "src": "1207:18:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$177_memory_ptr",
                        "typeString": "struct Pool.Voter"
                      },
                      "typeName": {
                        "id": 269,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 268,
                          "name": "Voter",
                          "nameLocations": [
                            "1207:5:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 177,
                          "src": "1207:5:1"
                        },
                        "referencedDeclaration": 177,
                        "src": "1207:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$177_storage_ptr",
                          "typeString": "struct Pool.Voter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 276,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1234:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1236:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1242:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 271,
                      "name": "Voter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 177,
                      "src": "1228:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Voter_$177_storage_ptr_$",
                        "typeString": "type(struct Pool.Voter storage pointer)"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1228:16:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voter_$177_memory_ptr",
                      "typeString": "struct Pool.Voter memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1207:37:1"
                },
                {
                  "expression": {
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 277,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "1254:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$177_storage_$",
                          "typeString": "mapping(address => struct Pool.Voter storage ref)"
                        }
                      },
                      "id": 279,
                      "indexExpression": {
                        "id": 278,
                        "name": "_voter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 265,
                        "src": "1261:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1254:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$177_storage",
                        "typeString": "struct Pool.Voter storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 280,
                      "name": "voter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 270,
                      "src": "1271:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$177_memory_ptr",
                        "typeString": "struct Pool.Voter memory"
                      }
                    },
                    "src": "1254:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voter_$177_storage",
                      "typeString": "struct Pool.Voter storage ref"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "1254:22:1"
                }
              ]
            },
            "functionSelector": "f4ab9adf",
            "id": 284,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addVoter",
            "nameLocation": "1165:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "_voter",
                  "nameLocation": "1182:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "1174:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1174:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1173:16:1"
            },
            "returnParameters": {
              "id": 267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1197:0:1"
            },
            "scope": 422,
            "src": "1156:127:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 291,
              "nodeType": "Block",
              "src": "1345:27:1",
              "statements": [
                {
                  "expression": {
                    "id": 289,
                    "name": "end",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 161,
                    "src": "1362:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 288,
                  "id": 290,
                  "nodeType": "Return",
                  "src": "1355:10:1"
                }
              ]
            },
            "functionSelector": "904798bd",
            "id": 292,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetQuestion",
            "nameLocation": "1304:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1315:2:1"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 287,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 292,
                  "src": "1338:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1337:6:1"
            },
            "scope": 422,
            "src": "1295:77:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 341,
              "nodeType": "Block",
              "src": "1423:279:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 300,
                              "name": "voters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 186,
                              "src": "1441:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$177_storage_$",
                                "typeString": "mapping(address => struct Pool.Voter storage ref)"
                              }
                            },
                            "id": 303,
                            "indexExpression": {
                              "expression": {
                                "id": 301,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1448:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1452:6:1",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1448:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1441:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$177_storage",
                              "typeString": "struct Pool.Voter storage ref"
                            }
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1460:6:1",
                          "memberName": "weight",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 172,
                          "src": "1441:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1468:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1441:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43657474652061646472657373206e27612070617320617373657a2064652057656967687420706f757220766f746572",
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1471:50:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ecc4176e3f7c3bb3be305d56cb534df51f1b0103122994ec59a16be9958f4e37",
                          "typeString": "literal_string \"Cette address n'a pas assez de Weight pour voter\""
                        },
                        "value": "Cette address n'a pas assez de Weight pour voter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ecc4176e3f7c3bb3be305d56cb534df51f1b0103122994ec59a16be9958f4e37",
                          "typeString": "literal_string \"Cette address n'a pas assez de Weight pour voter\""
                        }
                      ],
                      "id": 299,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1433:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1433:89:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "1433:89:1"
                },
                {
                  "expression": {
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 310,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 181,
                          "src": "1532:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Proposal_$170_storage_$dyn_storage",
                            "typeString": "struct Pool.Proposal storage ref[] storage ref"
                          }
                        },
                        "id": 312,
                        "indexExpression": {
                          "id": 311,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 294,
                          "src": "1542:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1532:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$170_storage",
                          "typeString": "struct Pool.Proposal storage ref"
                        }
                      },
                      "id": 313,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1552:5:1",
                      "memberName": "count",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 169,
                      "src": "1532:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1561:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1532:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 316,
                  "nodeType": "ExpressionStatement",
                  "src": "1532:30:1"
                },
                {
                  "expression": {
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 317,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 186,
                          "src": "1572:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$177_storage_$",
                            "typeString": "mapping(address => struct Pool.Voter storage ref)"
                          }
                        },
                        "id": 320,
                        "indexExpression": {
                          "expression": {
                            "id": 318,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1579:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1583:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1579:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1572:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$177_storage",
                          "typeString": "struct Pool.Voter storage ref"
                        }
                      },
                      "id": 321,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1591:6:1",
                      "memberName": "weight",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 172,
                      "src": "1572:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1600:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1572:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "1572:29:1"
                },
                {
                  "expression": {
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 325,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 186,
                          "src": "1611:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$177_storage_$",
                            "typeString": "mapping(address => struct Pool.Voter storage ref)"
                          }
                        },
                        "id": 328,
                        "indexExpression": {
                          "expression": {
                            "id": 326,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1618:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1622:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1618:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1611:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$177_storage",
                          "typeString": "struct Pool.Voter storage ref"
                        }
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1630:13:1",
                      "memberName": "vote_proposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 176,
                      "src": "1611:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 330,
                      "name": "proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 294,
                      "src": "1646:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1611:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "1611:43:1"
                },
                {
                  "expression": {
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 333,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 186,
                          "src": "1664:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$177_storage_$",
                            "typeString": "mapping(address => struct Pool.Voter storage ref)"
                          }
                        },
                        "id": 336,
                        "indexExpression": {
                          "expression": {
                            "id": 334,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1671:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1675:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1671:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1664:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$177_storage",
                          "typeString": "struct Pool.Voter storage ref"
                        }
                      },
                      "id": 337,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1683:5:1",
                      "memberName": "voted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 174,
                      "src": "1664:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1691:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1664:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "1664:31:1"
                }
              ]
            },
            "functionSelector": "0121b93f",
            "id": 342,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 297,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 296,
                  "name": "timer",
                  "nameLocations": [
                    "1417:5:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 197,
                  "src": "1417:5:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1417:5:1"
              }
            ],
            "name": "vote",
            "nameLocation": "1390:4:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "mutability": "mutable",
                  "name": "proposal",
                  "nameLocation": "1400:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "1395:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1395:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1394:15:1"
            },
            "returnParameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1423:0:1"
            },
            "scope": 422,
            "src": "1381:321:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 383,
              "nodeType": "Block",
              "src": "1795:270:1",
              "statements": [
                {
                  "assignments": [
                    348
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 348,
                      "mutability": "mutable",
                      "name": "winningVoteCount",
                      "nameLocation": "1810:16:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 383,
                      "src": "1805:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 347,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1805:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 350,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1829:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1805:25:1"
                },
                {
                  "body": {
                    "id": 381,
                    "nodeType": "Block",
                    "src": "1884:175:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 362,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 181,
                                "src": "1902:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Proposal_$170_storage_$dyn_storage",
                                  "typeString": "struct Pool.Proposal storage ref[] storage ref"
                                }
                              },
                              "id": 364,
                              "indexExpression": {
                                "id": 363,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 352,
                                "src": "1912:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1902:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$170_storage",
                                "typeString": "struct Pool.Proposal storage ref"
                              }
                            },
                            "id": 365,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1915:5:1",
                            "memberName": "count",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 169,
                            "src": "1902:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 366,
                            "name": "winningVoteCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 348,
                            "src": "1923:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1902:37:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 380,
                        "nodeType": "IfStatement",
                        "src": "1898:151:1",
                        "trueBody": {
                          "id": 379,
                          "nodeType": "Block",
                          "src": "1941:108:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 368,
                                  "name": "winningVoteCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 348,
                                  "src": "1959:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 369,
                                      "name": "proposals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 181,
                                      "src": "1978:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Proposal_$170_storage_$dyn_storage",
                                        "typeString": "struct Pool.Proposal storage ref[] storage ref"
                                      }
                                    },
                                    "id": 371,
                                    "indexExpression": {
                                      "id": 370,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 352,
                                      "src": "1988:1:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1978:12:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$170_storage",
                                      "typeString": "struct Pool.Proposal storage ref"
                                    }
                                  },
                                  "id": 372,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1991:5:1",
                                  "memberName": "count",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 169,
                                  "src": "1978:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1959:37:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 374,
                              "nodeType": "ExpressionStatement",
                              "src": "1959:37:1"
                            },
                            {
                              "expression": {
                                "id": 377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 375,
                                  "name": "winningProposal_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 345,
                                  "src": "2014:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 376,
                                  "name": "p",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 352,
                                  "src": "2033:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2014:20:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 378,
                              "nodeType": "ExpressionStatement",
                              "src": "2014:20:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 355,
                      "name": "p",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "1857:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 356,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "1861:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Proposal_$170_storage_$dyn_storage",
                          "typeString": "struct Pool.Proposal storage ref[] storage ref"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1871:6:1",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1861:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1857:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 382,
                  "initializationExpression": {
                    "assignments": [
                      352
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 352,
                        "mutability": "mutable",
                        "name": "p",
                        "nameLocation": "1850:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 382,
                        "src": "1845:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 351,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1845:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 354,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1854:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1845:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1879:3:1",
                      "subExpression": {
                        "id": 359,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "1879:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 361,
                    "nodeType": "ExpressionStatement",
                    "src": "1879:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "1840:219:1"
                }
              ]
            },
            "functionSelector": "609ff1bd",
            "id": 384,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "winningProposal",
            "nameLocation": "1717:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1732:2:1"
            },
            "returnParameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "mutability": "mutable",
                  "name": "winningProposal_",
                  "nameLocation": "1773:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 384,
                  "src": "1768:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1768:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1767:23:1"
            },
            "scope": 422,
            "src": "1708:357:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 397,
              "nodeType": "Block",
              "src": "2173:64:1",
              "statements": [
                {
                  "expression": {
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 389,
                      "name": "winnerName_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 387,
                      "src": "2183:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 390,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 181,
                          "src": "2197:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Proposal_$170_storage_$dyn_storage",
                            "typeString": "struct Pool.Proposal storage ref[] storage ref"
                          }
                        },
                        "id": 393,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 391,
                            "name": "winningProposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 384,
                            "src": "2207:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2207:17:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2197:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$170_storage",
                          "typeString": "struct Pool.Proposal storage ref"
                        }
                      },
                      "id": 394,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2226:4:1",
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 167,
                      "src": "2197:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "2183:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "2183:47:1"
                }
              ]
            },
            "functionSelector": "a0f2c291",
            "id": 398,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "winnerProposalName",
            "nameLocation": "2086:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2104:2:1"
            },
            "returnParameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 387,
                  "mutability": "mutable",
                  "name": "winnerName_",
                  "nameLocation": "2156:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 398,
                  "src": "2142:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2142:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2141:27:1"
            },
            "scope": 422,
            "src": "2077:160:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 411,
              "nodeType": "Block",
              "src": "2337:56:1",
              "statements": [
                {
                  "expression": {
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 404,
                      "name": "winnerP_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 402,
                      "src": "2347:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$170_memory_ptr",
                        "typeString": "struct Pool.Proposal memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 405,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "2358:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Proposal_$170_storage_$dyn_storage",
                          "typeString": "struct Pool.Proposal storage ref[] storage ref"
                        }
                      },
                      "id": 408,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 406,
                          "name": "winningProposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 384,
                          "src": "2368:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2368:17:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2358:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$170_storage",
                        "typeString": "struct Pool.Proposal storage ref"
                      }
                    },
                    "src": "2347:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$170_memory_ptr",
                      "typeString": "struct Pool.Proposal memory"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "2347:39:1"
                }
              ]
            },
            "functionSelector": "cca8de88",
            "id": 412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GETwinnerProposal",
            "nameLocation": "2252:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2269:2:1"
            },
            "returnParameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "winnerP_",
                  "nameLocation": "2323:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "2307:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proposal_$170_memory_ptr",
                    "typeString": "struct Pool.Proposal"
                  },
                  "typeName": {
                    "id": 401,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 400,
                      "name": "Proposal",
                      "nameLocations": [
                        "2307:8:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 170,
                      "src": "2307:8:1"
                    },
                    "referencedDeclaration": 170,
                    "src": "2307:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$170_storage_ptr",
                      "typeString": "struct Pool.Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2306:26:1"
            },
            "scope": 422,
            "src": "2243:150:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 420,
              "nodeType": "Block",
              "src": "2503:40:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 417,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 181,
                      "src": "2520:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Proposal_$170_storage_$dyn_storage",
                        "typeString": "struct Pool.Proposal storage ref[] storage ref"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2530:6:1",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2520:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 416,
                  "id": 419,
                  "nodeType": "Return",
                  "src": "2513:23:1"
                }
              ]
            },
            "functionSelector": "bc378a73",
            "id": 421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProposalsLength",
            "nameLocation": "2452:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2470:2:1"
            },
            "returnParameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 415,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "2494:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2494:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2493:9:1"
            },
            "scope": 422,
            "src": "2443:100:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 423,
        "src": "71:2483:1",
        "usedErrors": []
      }
    ],
    "src": "37:2517:1"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000d4938038062000d498339810160408190526200003491620001eb565b6000620000428582620003c0565b5042600181905560028190556200005d9062015180620004a2565b60035560046200006e8382620003c0565b5060056200007d8282620003c0565b5060005b83518110156200010a5760066040518060400160405280868481518110620000ad57620000ad620004be565b60209081029190910181015182526000918101829052835460018101855593825290208151919260020201908190620000e79082620003c0565b5060208201518160010155505080806200010190620004d4565b91505062000081565b5050505050620004f0565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000156576200015662000115565b604052919050565b600082601f8301126200017057600080fd5b81516001600160401b038111156200018c576200018c62000115565b6020620001a2601f8301601f191682016200012b565b8281528582848701011115620001b757600080fd5b60005b83811015620001d7578581018301518282018401528201620001ba565b506000928101909101919091529392505050565b600080600080608085870312156200020257600080fd5b84516001600160401b03808211156200021a57600080fd5b62000228888389016200015e565b95506020915081870151818111156200024057600080fd5b8701601f810189136200025257600080fd5b80518281111562000267576200026762000115565b8060051b620002788582016200012b565b918252828101850191858101908c8411156200029357600080fd5b86850192505b83831015620002d457825186811115620002b35760008081fd5b620002c38e89838901016200015e565b835250918601919086019062000299565b80995050505050506040870151915080821115620002f157600080fd5b620002ff888389016200015e565b935060608701519150808211156200031657600080fd5b5062000325878288016200015e565b91505092959194509250565b600181811c908216806200034657607f821691505b6020821081036200036757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003bb57600081815260208120601f850160051c81016020861015620003965750805b601f850160051c820191505b81811015620003b757828155600101620003a2565b5050505b505050565b81516001600160401b03811115620003dc57620003dc62000115565b620003f481620003ed845462000331565b846200036d565b602080601f8311600181146200042c5760008415620004135750858301515b600019600386901b1c1916600185901b178555620003b7565b600085815260208120601f198616915b828110156200045d578886015182559484019460019091019084016200043c565b50858210156200047c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b80820180821115620004b857620004b86200048c565b92915050565b634e487b7160e01b600052603260045260246000fd5b600060018201620004e957620004e96200048c565b5060010190565b61084980620005006000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063904798bd11610071578063904798bd14610133578063a0f2c2911461013b578063a3ec138d14610143578063bc378a7314610190578063cca8de8814610198578063f4ab9adf146101ad57600080fd5b80630121b93f146100b9578063013cf08b146100ce5780631bce8b4f146100f85780631c4695f41461010d5780633fad9ae014610115578063609ff1bd1461011d575b600080fd5b6100cc6100c7366004610685565b610213565b005b6100e16100dc366004610685565b610300565b6040516100ef9291906106e4565b60405180910390f35b6101006103bc565b6040516100ef9190610706565b61010061044a565b610100610457565b610125610464565b6040519081526020016100ef565b600354610125565b6101006104e1565b610175610151366004610720565b600760205260009081526040902080546001820154600290920154909160ff169083565b604080519384529115156020840152908201526060016100ef565b600654610125565b6101a061059c565b6040516100ef9190610749565b6100cc6101bb366004610720565b604080516060810182526001808252600060208084018281528486018381526001600160a01b039790971683526007909152939020915182559151918101805460ff1916921515929092179091559051600290910155565b600354421061022157600080fd5b3360009081526007602052604090205461029a5760405162461bcd60e51b815260206004820152603060248201527f43657474652061646472657373206e27612070617320617373657a206465205760448201526f32b4b3b43a103837bab9103b37ba32b960811b606482015260840160405180910390fd5b6001600682815481106102af576102af61077b565b906000526020600020906002020160010160008282546102cf91906107a7565b909155505033600090815260076020526040812090815560028101919091556001908101805460ff19169091179055565b6006818154811061031057600080fd5b9060005260206000209060020201600091509050806000018054610333906107c0565b80601f016020809104026020016040519081016040528092919081815260200182805461035f906107c0565b80156103ac5780601f10610381576101008083540402835291602001916103ac565b820191906000526020600020905b81548152906001019060200180831161038f57829003601f168201915b5050505050908060010154905082565b600480546103c9906107c0565b80601f01602080910402602001604051908101604052809291908181526020018280546103f5906107c0565b80156104425780601f1061041757610100808354040283529160200191610442565b820191906000526020600020905b81548152906001019060200180831161042557829003601f168201915b505050505081565b600580546103c9906107c0565b600080546103c9906107c0565b600080805b6006548110156104dc5781600682815481106104875761048761077b565b90600052602060002090600202016001015411156104ca57600681815481106104b2576104b261077b565b90600052602060002090600202016001015491508092505b806104d4816107fa565b915050610469565b505090565b606060066104ed610464565b815481106104fd576104fd61077b565b90600052602060002090600202016000018054610519906107c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610545906107c0565b80156105925780601f1061056757610100808354040283529160200191610592565b820191906000526020600020905b81548152906001019060200180831161057557829003601f168201915b5050505050905090565b60408051808201909152606081526000602082015260066105bb610464565b815481106105cb576105cb61077b565b90600052602060002090600202016040518060400160405290816000820180546105f4906107c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610620906107c0565b801561066d5780601f106106425761010080835404028352916020019161066d565b820191906000526020600020905b81548152906001019060200180831161065057829003601f168201915b50505050508152602001600182015481525050905090565b60006020828403121561069757600080fd5b5035919050565b6000815180845260005b818110156106c4576020818501810151868301820152016106a8565b506000602082860101526020601f19601f83011685010191505092915050565b6040815260006106f7604083018561069e565b90508260208301529392505050565b602081526000610719602083018461069e565b9392505050565b60006020828403121561073257600080fd5b81356001600160a01b038116811461071957600080fd5b602081526000825160406020840152610765606084018261069e565b9050602084015160408401528091505092915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156107ba576107ba610791565b92915050565b600181811c908216806107d457607f821691505b6020821081036107f457634e487b7160e01b600052602260045260246000fd5b50919050565b60006001820161080c5761080c610791565b506001019056fea264697066735822122018e49a8ea38edd8183f333d40ab0456e1734e4ae4c2aba4a46af9edfcb9125c864736f6c63430008130033",
  "bytecodeSha1": "551ab7bb5c0526e9897f713056657f764904e9e1",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "Pool",
  "coverageMap": {
    "branches": {
      "1": {
        "Pool.winningProposal": {
          "13": [
            1902,
            1939,
            false
          ]
        }
      }
    },
    "statements": {
      "1": {
        "Pool.GETwinnerProposal": {
          "12": [
            2347,
            2386
          ]
        },
        "Pool.GetQuestion": {
          "0": [
            1355,
            1365
          ]
        },
        "Pool.addVoter": {
          "2": [
            1254,
            1276
          ]
        },
        "Pool.getProposalsLength": {
          "1": [
            2513,
            2536
          ]
        },
        "Pool.vote": {
          "3": [
            1433,
            1522
          ],
          "4": [
            1532,
            1562
          ],
          "5": [
            1572,
            1601
          ],
          "6": [
            1611,
            1654
          ],
          "7": [
            1664,
            1695
          ]
        },
        "Pool.winnerProposalName": {
          "11": [
            2183,
            2230
          ]
        },
        "Pool.winningProposal": {
          "8": [
            1959,
            1996
          ],
          "9": [
            2014,
            2034
          ],
          "10": [
            1879,
            1882
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c8063904798bd11610071578063904798bd14610133578063a0f2c2911461013b578063a3ec138d14610143578063bc378a7314610190578063cca8de8814610198578063f4ab9adf146101ad57600080fd5b80630121b93f146100b9578063013cf08b146100ce5780631bce8b4f146100f85780631c4695f41461010d5780633fad9ae014610115578063609ff1bd1461011d575b600080fd5b6100cc6100c7366004610685565b610213565b005b6100e16100dc366004610685565b610300565b6040516100ef9291906106e4565b60405180910390f35b6101006103bc565b6040516100ef9190610706565b61010061044a565b610100610457565b610125610464565b6040519081526020016100ef565b600354610125565b6101006104e1565b610175610151366004610720565b600760205260009081526040902080546001820154600290920154909160ff169083565b604080519384529115156020840152908201526060016100ef565b600654610125565b6101a061059c565b6040516100ef9190610749565b6100cc6101bb366004610720565b604080516060810182526001808252600060208084018281528486018381526001600160a01b039790971683526007909152939020915182559151918101805460ff1916921515929092179091559051600290910155565b600354421061022157600080fd5b3360009081526007602052604090205461029a5760405162461bcd60e51b815260206004820152603060248201527f43657474652061646472657373206e27612070617320617373657a206465205760448201526f32b4b3b43a103837bab9103b37ba32b960811b606482015260840160405180910390fd5b6001600682815481106102af576102af61077b565b906000526020600020906002020160010160008282546102cf91906107a7565b909155505033600090815260076020526040812090815560028101919091556001908101805460ff19169091179055565b6006818154811061031057600080fd5b9060005260206000209060020201600091509050806000018054610333906107c0565b80601f016020809104026020016040519081016040528092919081815260200182805461035f906107c0565b80156103ac5780601f10610381576101008083540402835291602001916103ac565b820191906000526020600020905b81548152906001019060200180831161038f57829003601f168201915b5050505050908060010154905082565b600480546103c9906107c0565b80601f01602080910402602001604051908101604052809291908181526020018280546103f5906107c0565b80156104425780601f1061041757610100808354040283529160200191610442565b820191906000526020600020905b81548152906001019060200180831161042557829003601f168201915b505050505081565b600580546103c9906107c0565b600080546103c9906107c0565b600080805b6006548110156104dc5781600682815481106104875761048761077b565b90600052602060002090600202016001015411156104ca57600681815481106104b2576104b261077b565b90600052602060002090600202016001015491508092505b806104d4816107fa565b915050610469565b505090565b606060066104ed610464565b815481106104fd576104fd61077b565b90600052602060002090600202016000018054610519906107c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610545906107c0565b80156105925780601f1061056757610100808354040283529160200191610592565b820191906000526020600020905b81548152906001019060200180831161057557829003601f168201915b5050505050905090565b60408051808201909152606081526000602082015260066105bb610464565b815481106105cb576105cb61077b565b90600052602060002090600202016040518060400160405290816000820180546105f4906107c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610620906107c0565b801561066d5780601f106106425761010080835404028352916020019161066d565b820191906000526020600020905b81548152906001019060200180831161065057829003601f168201915b50505050508152602001600182015481525050905090565b60006020828403121561069757600080fd5b5035919050565b6000815180845260005b818110156106c4576020818501810151868301820152016106a8565b506000602082860101526020601f19601f83011685010191505092915050565b6040815260006106f7604083018561069e565b90508260208301529392505050565b602081526000610719602083018461069e565b9392505050565b60006020828403121561073257600080fd5b81356001600160a01b038116811461071957600080fd5b602081526000825160406020840152610765606084018261069e565b9050602084015160408401528091505092915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156107ba576107ba610791565b92915050565b600181811c908216806107d457607f821691505b6020821081036107f457634e487b7160e01b600052602260045260246000fd5b50919050565b60006001820161080c5761080c610791565b506001019056fea264697066735822122018e49a8ea38edd8183f333d40ab0456e1734e4ae4c2aba4a46af9edfcb9125c864736f6c63430008130033",
  "deployedSourceMap": "71:2483:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1381:321;;;;;;:::i;:::-;;:::i;:::-;;503:27;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;173:22;;;:::i;:::-;;;;;;;:::i;201:18::-;;;:::i;92:22::-;;;:::i;1708:357::-;;;:::i;:::-;;;1294:25:2;;;1282:2;1267:18;1708:357:1;1148:177:2;1295:77:1;1362:3;;1295:77;;2077:160;;;:::i;537:39::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1817:25:2;;;1885:14;;1878:22;1873:2;1858:18;;1851:50;1917:18;;;1910:34;1805:2;1790:18;537:39:1;1621:329:2;2443:100:1;2520:9;:16;2443:100;;2243:150;;;:::i;:::-;;;;;;;:::i;1156:127::-;;;;;;:::i;:::-;1228:16;;;;;;;;1234:1;1228:16;;;-1:-1:-1;1228:16:1;;;;;;;;;;;;;-1:-1:-1;;;;;1254:14:1;;;;;;:6;:14;;;;;;:22;;;;;;;;;;;-1:-1:-1;;1254:22:1;;;;;;;;;;;;;;;;;;1156:127;1381:321;636:3;;618:15;:21;610:30;;;;;;1448:10:::1;1468:1;1441:18:::0;;;:6:::1;:18;::::0;;;;:25;1433:89:::1;;;::::0;-1:-1:-1;;;1433:89:1;;2591:2:2;1433:89:1::1;::::0;::::1;2573:21:2::0;2630:2;2610:18;;;2603:30;2669:34;2649:18;;;2642:62;-1:-1:-1;;;2720:18:2;;;2713:46;2776:19;;1433:89:1::1;;;;;;;;1561:1;1532:9;1542:8;1532:19;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;;:30;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;1579:10:1::1;1600:1;1572:18:::0;;;:6:::1;:18;::::0;;;;:29;;;1611:32:::1;::::0;::::1;:43:::0;;;;1691:4:::1;1664:24:::0;;::::1;:31:::0;;-1:-1:-1;;1664:31:1::1;::::0;;::::1;::::0;;1381:321::o;503:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;173:22::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;201:18::-;;;;;;;:::i;92:22::-;;;;;;;:::i;1708:357::-;1768:21;;;1840:219;1861:9;:16;1857:20;;1840:219;;;1923:16;1902:9;1912:1;1902:12;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;:37;1898:151;;;1978:9;1988:1;1978:12;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;1959:37;;2033:1;2014:20;;1898:151;1879:3;;;;:::i;:::-;;;;1840:219;;;;1795:270;1708:357;:::o;2077:160::-;2142:25;2197:9;2207:17;:15;:17::i;:::-;2197:28;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;2183:47;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:160;:::o;2243:150::-;-1:-1:-1;;;;;;;;;;;;;;;;;2358:9:1;2368:17;:15;:17::i;:::-;2358:28;;;;;;;;:::i;:::-;;;;;;;;;;;2347:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2243:150;:::o;14:180:2:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:2;;14:180;-1:-1:-1;14:180:2:o;199:423::-;241:3;279:5;273:12;306:6;301:3;294:19;331:1;341:162;355:6;352:1;349:13;341:162;;;417:4;473:13;;;469:22;;463:29;445:11;;;441:20;;434:59;370:12;341:162;;;345:3;548:1;541:4;532:6;527:3;523:16;519:27;512:38;611:4;604:2;600:7;595:2;587:6;583:15;579:29;574:3;570:39;566:50;559:57;;;199:423;;;;:::o;627:291::-;804:2;793:9;786:21;767:4;824:45;865:2;854:9;850:18;842:6;824:45;:::i;:::-;816:53;;905:6;900:2;889:9;885:18;878:34;627:291;;;;;:::o;923:220::-;1072:2;1061:9;1054:21;1035:4;1092:45;1133:2;1122:9;1118:18;1110:6;1092:45;:::i;:::-;1084:53;923:220;-1:-1:-1;;;923:220:2:o;1330:286::-;1389:6;1442:2;1430:9;1421:7;1417:23;1413:32;1410:52;;;1458:1;1455;1448:12;1410:52;1484:23;;-1:-1:-1;;;;;1536:31:2;;1526:42;;1516:70;;1582:1;1579;1572:12;1955:429;2134:2;2123:9;2116:21;2097:4;2172:6;2166:13;2215:4;2210:2;2199:9;2195:18;2188:32;2243:51;2290:2;2279:9;2275:18;2261:12;2243:51;:::i;:::-;2229:65;;2350:2;2342:6;2338:15;2332:22;2325:4;2314:9;2310:20;2303:52;2372:6;2364:14;;;1955:429;;;;:::o;2806:127::-;2867:10;2862:3;2858:20;2855:1;2848:31;2898:4;2895:1;2888:15;2922:4;2919:1;2912:15;2938:127;2999:10;2994:3;2990:20;2987:1;2980:31;3030:4;3027:1;3020:15;3054:4;3051:1;3044:15;3070:125;3135:9;;;3156:10;;;3153:36;;;3169:18;;:::i;:::-;3070:125;;;;:::o;3200:380::-;3279:1;3275:12;;;;3322;;;3343:61;;3397:4;3389:6;3385:17;3375:27;;3343:61;3450:2;3442:6;3439:14;3419:18;3416:38;3413:161;;3496:10;3491:3;3487:20;3484:1;3477:31;3531:4;3528:1;3521:15;3559:4;3556:1;3549:15;3413:161;;3200:380;;;:::o;3585:135::-;3624:3;3645:17;;;3642:43;;3665:18;;:::i;:::-;-1:-1:-1;3712:1:2;3701:13;;3585:135::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    71,
    2554
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x904798BD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x904798BD EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0xA0F2C291 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xBC378A73 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0xCCA8DE88 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xF4AB9ADF EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x13CF08B EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x1BCE8B4F EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x1C4695F4 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x3FAD9AE0 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x685 JUMP JUMPDEST PUSH2 0x213 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x685 JUMP JUMPDEST PUSH2 0x300 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP3 SWAP2 SWAP1 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x44A JUMP JUMPDEST PUSH2 0x100 PUSH2 0x457 JUMP JUMPDEST PUSH2 0x125 PUSH2 0x464 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEF JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 PUSH1 0xFF AND SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xEF JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x749 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE DUP5 DUP7 ADD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 SWAP1 SWAP8 AND DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP4 SWAP1 KECCAK256 SWAP2 MLOAD DUP3 SSTORE SWAP2 MLOAD SWAP2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP LT PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x29A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43657474652061646472657373206E27612070617320617373657A2064652057 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x32B4B3B43A103837BAB9103B37BA32B9 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2AF JUMPI PUSH2 0x2AF PUSH2 0x77B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x7A7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP2 SSTORE PUSH1 0x2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x333 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x35F SWAP1 PUSH2 0x7C0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x381 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x38F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x3C9 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3F5 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x442 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x417 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x442 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x425 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x3C9 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x3C9 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x4DC JUMPI DUP2 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x487 JUMPI PUSH2 0x487 PUSH2 0x77B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x4CA JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4B2 JUMPI PUSH2 0x4B2 PUSH2 0x77B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 PUSH2 0x4D4 DUP2 PUSH2 0x7FA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x469 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 PUSH2 0x4ED PUSH2 0x464 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x4FD JUMPI PUSH2 0x4FD PUSH2 0x77B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x519 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x545 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x592 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x567 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x592 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x575 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x6 PUSH2 0x5BB PUSH2 0x464 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x5CB JUMPI PUSH2 0x5CB PUSH2 0x77B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x5F4 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x620 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x66D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x642 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x66D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x650 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x697 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x6A8 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x6F7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x69E JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x719 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x69E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x732 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x765 PUSH1 0x60 DUP5 ADD DUP3 PUSH2 0x69E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7BA JUMPI PUSH2 0x7BA PUSH2 0x791 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x80C JUMPI PUSH2 0x80C PUSH2 0x791 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xE4 SWAP11 DUP15 LOG3 DUP15 0xDD DUP2 DUP4 RETURN CALLER 0xD4 EXP 0xB0 GASLIMIT PUSH15 0x1734E4AE4C2ABA4A46AF9EDFCB9125 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        71,
        2554
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB4"
    },
    "25": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x904798BD"
    },
    "38": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "GT",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x904798BD"
    },
    "49": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "EQ",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x133"
    },
    "53": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA0F2C291"
    },
    "60": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13B"
    },
    "64": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA3EC138D"
    },
    "71": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x143"
    },
    "75": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xBC378A73"
    },
    "82": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x190"
    },
    "86": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "DUP1",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xCCA8DE88"
    },
    "93": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "EQ",
      "path": "1"
    },
    "94": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x198"
    },
    "97": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "98": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "DUP1",
      "path": "1"
    },
    "99": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF4AB9ADF"
    },
    "104": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "EQ",
      "path": "1"
    },
    "105": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AD"
    },
    "108": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "109": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "DUP1",
      "path": "1"
    },
    "112": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "REVERT",
      "path": "1"
    },
    "113": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "DUP1",
      "path": "1"
    },
    "115": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x121B93F"
    },
    "120": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "EQ",
      "path": "1"
    },
    "121": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB9"
    },
    "124": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "DUP1",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x13CF08B"
    },
    "131": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "EQ",
      "path": "1"
    },
    "132": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCE"
    },
    "135": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "136": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "DUP1",
      "path": "1"
    },
    "137": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1BCE8B4F"
    },
    "142": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "EQ",
      "path": "1"
    },
    "143": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF8"
    },
    "146": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "147": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "DUP1",
      "path": "1"
    },
    "148": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1C4695F4"
    },
    "153": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "EQ",
      "path": "1"
    },
    "154": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10D"
    },
    "157": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "158": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "DUP1",
      "path": "1"
    },
    "159": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3FAD9AE0"
    },
    "164": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "EQ",
      "path": "1"
    },
    "165": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x115"
    },
    "168": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "169": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "DUP1",
      "path": "1"
    },
    "170": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x609FF1BD"
    },
    "175": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "EQ",
      "path": "1"
    },
    "176": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11D"
    },
    "179": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "180": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "181": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "183": {
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "DUP1",
      "path": "1"
    },
    "184": {
      "first_revert": true,
      "fn": null,
      "offset": [
        71,
        2554
      ],
      "op": "REVERT",
      "path": "1"
    },
    "185": {
      "fn": "Pool.vote",
      "offset": [
        1381,
        1702
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "186": {
      "fn": "Pool.vote",
      "offset": [
        1381,
        1702
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCC"
    },
    "189": {
      "fn": "Pool.vote",
      "offset": [
        1381,
        1702
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC7"
    },
    "192": {
      "fn": "Pool.vote",
      "offset": [
        1381,
        1702
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "193": {
      "fn": "Pool.vote",
      "offset": [
        1381,
        1702
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "195": {
      "fn": "Pool.vote",
      "offset": [
        1381,
        1702
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x685"
    },
    "198": {
      "fn": "Pool.vote",
      "jump": "i",
      "offset": [
        1381,
        1702
      ],
      "op": "JUMP",
      "path": "1"
    },
    "199": {
      "fn": "Pool.vote",
      "offset": [
        1381,
        1702
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "200": {
      "fn": "Pool.vote",
      "offset": [
        1381,
        1702
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x213"
    },
    "203": {
      "fn": "Pool.vote",
      "jump": "i",
      "offset": [
        1381,
        1702
      ],
      "op": "JUMP",
      "path": "1"
    },
    "204": {
      "fn": "Pool.vote",
      "offset": [
        1381,
        1702
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "205": {
      "fn": "Pool.vote",
      "offset": [
        1381,
        1702
      ],
      "op": "STOP",
      "path": "1"
    },
    "206": {
      "offset": [
        503,
        530
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "207": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE1"
    },
    "210": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDC"
    },
    "213": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "214": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "216": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x685"
    },
    "219": {
      "fn": "Pool.vote",
      "jump": "i",
      "offset": [
        503,
        530
      ],
      "op": "JUMP",
      "path": "1"
    },
    "220": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "221": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x300"
    },
    "224": {
      "fn": "Pool.vote",
      "jump": "i",
      "offset": [
        503,
        530
      ],
      "op": "JUMP",
      "path": "1"
    },
    "225": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "226": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "228": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "229": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEF"
    },
    "232": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "233": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "234": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "235": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6E4"
    },
    "238": {
      "fn": "Pool.vote",
      "jump": "i",
      "offset": [
        503,
        530
      ],
      "op": "JUMP",
      "path": "1"
    },
    "239": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "240": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "242": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "243": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP1",
      "path": "1"
    },
    "244": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "245": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SUB",
      "path": "1"
    },
    "246": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "247": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "RETURN",
      "path": "1"
    },
    "248": {
      "offset": [
        173,
        195
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "249": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "252": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3BC"
    },
    "255": {
      "fn": "Pool.vote",
      "jump": "i",
      "offset": [
        173,
        195
      ],
      "op": "JUMP",
      "path": "1"
    },
    "256": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "257": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "259": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "260": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEF"
    },
    "263": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "264": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "265": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x706"
    },
    "268": {
      "fn": "Pool.vote",
      "jump": "i",
      "offset": [
        173,
        195
      ],
      "op": "JUMP",
      "path": "1"
    },
    "269": {
      "offset": [
        201,
        219
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "270": {
      "fn": "Pool.vote",
      "offset": [
        201,
        219
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "273": {
      "fn": "Pool.vote",
      "offset": [
        201,
        219
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x44A"
    },
    "276": {
      "fn": "Pool.vote",
      "jump": "i",
      "offset": [
        201,
        219
      ],
      "op": "JUMP",
      "path": "1"
    },
    "277": {
      "offset": [
        92,
        114
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "278": {
      "fn": "Pool.vote",
      "offset": [
        92,
        114
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "281": {
      "fn": "Pool.vote",
      "offset": [
        92,
        114
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x457"
    },
    "284": {
      "fn": "Pool.vote",
      "jump": "i",
      "offset": [
        92,
        114
      ],
      "op": "JUMP",
      "path": "1"
    },
    "285": {
      "fn": "Pool.winningProposal",
      "offset": [
        1708,
        2065
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "286": {
      "fn": "Pool.winningProposal",
      "offset": [
        1708,
        2065
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x125"
    },
    "289": {
      "fn": "Pool.winningProposal",
      "offset": [
        1708,
        2065
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x464"
    },
    "292": {
      "fn": "Pool.winningProposal",
      "jump": "i",
      "offset": [
        1708,
        2065
      ],
      "op": "JUMP",
      "path": "1"
    },
    "293": {
      "fn": "Pool.winningProposal",
      "offset": [
        1708,
        2065
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "294": {
      "fn": "Pool.winningProposal",
      "offset": [
        1708,
        2065
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "296": {
      "fn": "Pool.winningProposal",
      "offset": [
        1708,
        2065
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "297": {
      "op": "SWAP1"
    },
    "298": {
      "op": "DUP2"
    },
    "299": {
      "op": "MSTORE"
    },
    "300": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "302": {
      "op": "ADD"
    },
    "303": {
      "fn": "Pool.winningProposal",
      "offset": [
        1708,
        2065
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEF"
    },
    "306": {
      "op": "JUMP"
    },
    "307": {
      "fn": "Pool.GetQuestion",
      "offset": [
        1295,
        1372
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "308": {
      "fn": "Pool.GetQuestion",
      "offset": [
        1362,
        1365
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x3"
    },
    "310": {
      "fn": "Pool.GetQuestion",
      "offset": [
        1362,
        1365
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "311": {
      "fn": "Pool.GetQuestion",
      "offset": [
        1295,
        1372
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x125"
    },
    "314": {
      "fn": "Pool.GetQuestion",
      "offset": [
        1295,
        1372
      ],
      "op": "JUMP",
      "path": "1"
    },
    "315": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2077,
        2237
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "316": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2077,
        2237
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "319": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2077,
        2237
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4E1"
    },
    "322": {
      "fn": "Pool.winnerProposalName",
      "jump": "i",
      "offset": [
        2077,
        2237
      ],
      "op": "JUMP",
      "path": "1"
    },
    "323": {
      "offset": [
        537,
        576
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "324": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x175"
    },
    "327": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "330": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "331": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "333": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x720"
    },
    "336": {
      "fn": "Pool.winnerProposalName",
      "jump": "i",
      "offset": [
        537,
        576
      ],
      "op": "JUMP",
      "path": "1"
    },
    "337": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "338": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "340": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "342": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "343": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "345": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "346": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "DUP2",
      "path": "1"
    },
    "347": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "348": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "350": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "351": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "352": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "DUP1",
      "path": "1"
    },
    "353": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "354": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "356": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "DUP3",
      "path": "1"
    },
    "357": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "ADD",
      "path": "1"
    },
    "358": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "359": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "361": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "362": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "363": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "ADD",
      "path": "1"
    },
    "364": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "365": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "366": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "367": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "369": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "AND",
      "path": "1"
    },
    "370": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "371": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "DUP4",
      "path": "1"
    },
    "372": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "JUMP",
      "path": "1"
    },
    "373": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "374": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "376": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "DUP1",
      "path": "1"
    },
    "377": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        537,
        576
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "378": {
      "op": "SWAP4"
    },
    "379": {
      "op": "DUP5"
    },
    "380": {
      "op": "MSTORE"
    },
    "381": {
      "op": "SWAP2"
    },
    "382": {
      "op": "ISZERO"
    },
    "383": {
      "op": "ISZERO"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "386": {
      "op": "DUP5"
    },
    "387": {
      "op": "ADD"
    },
    "388": {
      "op": "MSTORE"
    },
    "389": {
      "op": "SWAP1"
    },
    "390": {
      "op": "DUP3"
    },
    "391": {
      "op": "ADD"
    },
    "392": {
      "op": "MSTORE"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "395": {
      "op": "ADD"
    },
    "396": {
      "offset": [
        537,
        576
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEF"
    },
    "399": {
      "op": "JUMP"
    },
    "400": {
      "fn": "Pool.getProposalsLength",
      "offset": [
        2443,
        2543
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "401": {
      "fn": "Pool.getProposalsLength",
      "offset": [
        2520,
        2529
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x6"
    },
    "403": {
      "fn": "Pool.getProposalsLength",
      "offset": [
        2520,
        2536
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "404": {
      "fn": "Pool.getProposalsLength",
      "offset": [
        2443,
        2543
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x125"
    },
    "407": {
      "fn": "Pool.getProposalsLength",
      "offset": [
        2443,
        2543
      ],
      "op": "JUMP",
      "path": "1"
    },
    "408": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2243,
        2393
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "409": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2243,
        2393
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A0"
    },
    "412": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2243,
        2393
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x59C"
    },
    "415": {
      "fn": "Pool.GETwinnerProposal",
      "jump": "i",
      "offset": [
        2243,
        2393
      ],
      "op": "JUMP",
      "path": "1"
    },
    "416": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2243,
        2393
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "417": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2243,
        2393
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "419": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2243,
        2393
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "420": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2243,
        2393
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEF"
    },
    "423": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2243,
        2393
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "424": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2243,
        2393
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "425": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2243,
        2393
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x749"
    },
    "428": {
      "fn": "Pool.GETwinnerProposal",
      "jump": "i",
      "offset": [
        2243,
        2393
      ],
      "op": "JUMP",
      "path": "1"
    },
    "429": {
      "fn": "Pool.addVoter",
      "offset": [
        1156,
        1283
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "430": {
      "fn": "Pool.addVoter",
      "offset": [
        1156,
        1283
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCC"
    },
    "433": {
      "fn": "Pool.addVoter",
      "offset": [
        1156,
        1283
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BB"
    },
    "436": {
      "fn": "Pool.addVoter",
      "offset": [
        1156,
        1283
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "437": {
      "fn": "Pool.addVoter",
      "offset": [
        1156,
        1283
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "439": {
      "fn": "Pool.addVoter",
      "offset": [
        1156,
        1283
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x720"
    },
    "442": {
      "fn": "Pool.addVoter",
      "jump": "i",
      "offset": [
        1156,
        1283
      ],
      "op": "JUMP",
      "path": "1"
    },
    "443": {
      "fn": "Pool.addVoter",
      "offset": [
        1156,
        1283
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "444": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "446": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "DUP1",
      "path": "1"
    },
    "447": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "448": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "450": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "DUP2",
      "path": "1"
    },
    "451": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "ADD",
      "path": "1"
    },
    "452": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "DUP3",
      "path": "1"
    },
    "453": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "454": {
      "fn": "Pool.addVoter",
      "offset": [
        1234,
        1235
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "456": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "DUP1",
      "path": "1"
    },
    "457": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "DUP3",
      "path": "1"
    },
    "458": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "461": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "463": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "DUP1",
      "path": "1"
    },
    "464": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "DUP5",
      "path": "1"
    },
    "465": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "ADD",
      "path": "1"
    },
    "466": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "DUP3",
      "path": "1"
    },
    "467": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "DUP2",
      "path": "1"
    },
    "468": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "469": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "DUP5",
      "path": "1"
    },
    "470": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "DUP7",
      "path": "1"
    },
    "471": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "ADD",
      "path": "1"
    },
    "472": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "DUP4",
      "path": "1"
    },
    "473": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "DUP2",
      "path": "1"
    },
    "474": {
      "fn": "Pool.addVoter",
      "offset": [
        1228,
        1244
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "481": {
      "op": "SHL"
    },
    "482": {
      "op": "SUB"
    },
    "483": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1268
      ],
      "op": "SWAP8",
      "path": "1",
      "statement": 2
    },
    "484": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1268
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "485": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1268
      ],
      "op": "SWAP8",
      "path": "1"
    },
    "486": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1268
      ],
      "op": "AND",
      "path": "1"
    },
    "487": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1268
      ],
      "op": "DUP4",
      "path": "1"
    },
    "488": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1268
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "489": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1260
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "491": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1268
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "492": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1268
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "493": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1268
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "494": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1268
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "495": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1268
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "496": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1268
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "497": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "498": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "499": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "DUP3",
      "path": "1"
    },
    "500": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "501": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "502": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "503": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "504": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "DUP2",
      "path": "1"
    },
    "505": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "ADD",
      "path": "1"
    },
    "506": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "DUP1",
      "path": "1"
    },
    "507": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "508": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "510": {
      "op": "NOT"
    },
    "511": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "AND",
      "path": "1"
    },
    "512": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "513": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "514": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "515": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "516": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "517": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "518": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "OR",
      "path": "1"
    },
    "519": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "520": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "521": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "522": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "523": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "524": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "526": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "527": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "528": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "ADD",
      "path": "1"
    },
    "529": {
      "fn": "Pool.addVoter",
      "offset": [
        1254,
        1276
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "530": {
      "fn": "Pool.addVoter",
      "offset": [
        1156,
        1283
      ],
      "op": "JUMP",
      "path": "1"
    },
    "531": {
      "fn": "Pool.vote",
      "offset": [
        1381,
        1702
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "532": {
      "offset": [
        636,
        639
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "534": {
      "fn": "Pool.vote",
      "offset": [
        636,
        639
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "535": {
      "offset": [
        618,
        633
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "536": {
      "offset": [
        618,
        639
      ],
      "op": "LT",
      "path": "1"
    },
    "537": {
      "offset": [
        610,
        640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x221"
    },
    "540": {
      "offset": [
        610,
        640
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "541": {
      "fn": "Pool.vote",
      "offset": [
        610,
        640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "543": {
      "fn": "Pool.vote",
      "offset": [
        610,
        640
      ],
      "op": "DUP1",
      "path": "1"
    },
    "544": {
      "fn": "Pool.vote",
      "offset": [
        610,
        640
      ],
      "op": "REVERT",
      "path": "1"
    },
    "545": {
      "fn": "Pool.vote",
      "offset": [
        610,
        640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "546": {
      "fn": "Pool.vote",
      "offset": [
        1448,
        1458
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 3
    },
    "547": {
      "fn": "Pool.vote",
      "offset": [
        1468,
        1469
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "549": {
      "fn": "Pool.vote",
      "offset": [
        1441,
        1459
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "550": {
      "fn": "Pool.vote",
      "offset": [
        1441,
        1459
      ],
      "op": "DUP2",
      "path": "1"
    },
    "551": {
      "fn": "Pool.vote",
      "offset": [
        1441,
        1459
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "552": {
      "fn": "Pool.vote",
      "offset": [
        1441,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "554": {
      "fn": "Pool.vote",
      "offset": [
        1441,
        1459
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "556": {
      "fn": "Pool.vote",
      "offset": [
        1441,
        1459
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "557": {
      "fn": "Pool.vote",
      "offset": [
        1441,
        1459
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "559": {
      "fn": "Pool.vote",
      "offset": [
        1441,
        1459
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "560": {
      "fn": "Pool.vote",
      "offset": [
        1441,
        1459
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "561": {
      "fn": "Pool.vote",
      "offset": [
        1441,
        1466
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "562": {
      "fn": "Pool.vote",
      "offset": [
        1433,
        1522
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29A"
    },
    "565": {
      "fn": "Pool.vote",
      "offset": [
        1433,
        1522
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "566": {
      "fn": "Pool.vote",
      "offset": [
        1433,
        1522
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "568": {
      "fn": "Pool.vote",
      "offset": [
        1433,
        1522
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "569": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "573": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "575": {
      "op": "SHL"
    },
    "576": {
      "fn": "Pool.vote",
      "offset": [
        1433,
        1522
      ],
      "op": "DUP2",
      "path": "1"
    },
    "577": {
      "fn": "Pool.vote",
      "offset": [
        1433,
        1522
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "578": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "580": {
      "fn": "Pool.vote",
      "offset": [
        1433,
        1522
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "582": {
      "fn": "Pool.vote",
      "offset": [
        1433,
        1522
      ],
      "op": "DUP3",
      "path": "1"
    },
    "583": {
      "fn": "Pool.vote",
      "offset": [
        1433,
        1522
      ],
      "op": "ADD",
      "path": "1"
    },
    "584": {
      "op": "MSTORE"
    },
    "585": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "589": {
      "op": "DUP3"
    },
    "590": {
      "op": "ADD"
    },
    "591": {
      "op": "MSTORE"
    },
    "592": {
      "op": "PUSH32",
      "value": "0x43657474652061646472657373206E27612070617320617373657A2064652057"
    },
    "625": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "627": {
      "op": "DUP3"
    },
    "628": {
      "op": "ADD"
    },
    "629": {
      "op": "MSTORE"
    },
    "630": {
      "op": "PUSH16",
      "value": "0x32B4B3B43A103837BAB9103B37BA32B9"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "649": {
      "op": "SHL"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "652": {
      "op": "DUP3"
    },
    "653": {
      "op": "ADD"
    },
    "654": {
      "op": "MSTORE"
    },
    "655": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "657": {
      "op": "ADD"
    },
    "658": {
      "fn": "Pool.vote",
      "offset": [
        1433,
        1522
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "660": {
      "fn": "Pool.vote",
      "offset": [
        1433,
        1522
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "661": {
      "fn": "Pool.vote",
      "offset": [
        1433,
        1522
      ],
      "op": "DUP1",
      "path": "1"
    },
    "662": {
      "fn": "Pool.vote",
      "offset": [
        1433,
        1522
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "663": {
      "fn": "Pool.vote",
      "offset": [
        1433,
        1522
      ],
      "op": "SUB",
      "path": "1"
    },
    "664": {
      "fn": "Pool.vote",
      "offset": [
        1433,
        1522
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "665": {
      "fn": "Pool.vote",
      "offset": [
        1433,
        1522
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "666": {
      "fn": "Pool.vote",
      "offset": [
        1433,
        1522
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "667": {
      "fn": "Pool.vote",
      "offset": [
        1561,
        1562
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 4,
      "value": "0x1"
    },
    "669": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1541
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "671": {
      "fn": "Pool.vote",
      "offset": [
        1542,
        1550
      ],
      "op": "DUP3",
      "path": "1"
    },
    "672": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1551
      ],
      "op": "DUP2",
      "path": "1"
    },
    "673": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1551
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "674": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1551
      ],
      "op": "DUP2",
      "path": "1"
    },
    "675": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1551
      ],
      "op": "LT",
      "path": "1"
    },
    "676": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1551
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AF"
    },
    "679": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1551
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "680": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1551
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AF"
    },
    "683": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1551
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x77B"
    },
    "686": {
      "fn": "Pool.vote",
      "jump": "i",
      "offset": [
        1532,
        1551
      ],
      "op": "JUMP",
      "path": "1"
    },
    "687": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1551
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "688": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1551
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "689": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1551
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "691": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1551
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "692": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1551
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "694": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1551
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "696": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1551
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "697": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1551
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "698": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1551
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "700": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1551
      ],
      "op": "MUL",
      "path": "1"
    },
    "701": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1551
      ],
      "op": "ADD",
      "path": "1"
    },
    "702": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1557
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "704": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1557
      ],
      "op": "ADD",
      "path": "1"
    },
    "705": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1557
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "707": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1562
      ],
      "op": "DUP3",
      "path": "1"
    },
    "708": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1562
      ],
      "op": "DUP3",
      "path": "1"
    },
    "709": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1562
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "710": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1562
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2CF"
    },
    "713": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1562
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "714": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1562
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "715": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1562
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A7"
    },
    "718": {
      "fn": "Pool.vote",
      "jump": "i",
      "offset": [
        1532,
        1562
      ],
      "op": "JUMP",
      "path": "1"
    },
    "719": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1562
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "720": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1562
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "721": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1562
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "722": {
      "fn": "Pool.vote",
      "offset": [
        1532,
        1562
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "723": {
      "op": "POP"
    },
    "724": {
      "op": "POP"
    },
    "725": {
      "fn": "Pool.vote",
      "offset": [
        1579,
        1589
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 5
    },
    "726": {
      "fn": "Pool.vote",
      "offset": [
        1600,
        1601
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "728": {
      "fn": "Pool.vote",
      "offset": [
        1572,
        1590
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "729": {
      "fn": "Pool.vote",
      "offset": [
        1572,
        1590
      ],
      "op": "DUP2",
      "path": "1"
    },
    "730": {
      "fn": "Pool.vote",
      "offset": [
        1572,
        1590
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "731": {
      "fn": "Pool.vote",
      "offset": [
        1572,
        1578
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "733": {
      "fn": "Pool.vote",
      "offset": [
        1572,
        1590
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "735": {
      "fn": "Pool.vote",
      "offset": [
        1572,
        1590
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "736": {
      "fn": "Pool.vote",
      "offset": [
        1572,
        1590
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "738": {
      "fn": "Pool.vote",
      "offset": [
        1572,
        1590
      ],
      "op": "DUP2",
      "path": "1"
    },
    "739": {
      "fn": "Pool.vote",
      "offset": [
        1572,
        1590
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "740": {
      "fn": "Pool.vote",
      "offset": [
        1572,
        1601
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "741": {
      "fn": "Pool.vote",
      "offset": [
        1572,
        1601
      ],
      "op": "DUP2",
      "path": "1"
    },
    "742": {
      "fn": "Pool.vote",
      "offset": [
        1572,
        1601
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "743": {
      "fn": "Pool.vote",
      "offset": [
        1611,
        1643
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 6,
      "value": "0x2"
    },
    "745": {
      "fn": "Pool.vote",
      "offset": [
        1611,
        1643
      ],
      "op": "DUP2",
      "path": "1"
    },
    "746": {
      "fn": "Pool.vote",
      "offset": [
        1611,
        1643
      ],
      "op": "ADD",
      "path": "1"
    },
    "747": {
      "fn": "Pool.vote",
      "offset": [
        1611,
        1654
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "748": {
      "fn": "Pool.vote",
      "offset": [
        1611,
        1654
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "749": {
      "fn": "Pool.vote",
      "offset": [
        1611,
        1654
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "750": {
      "fn": "Pool.vote",
      "offset": [
        1611,
        1654
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "751": {
      "fn": "Pool.vote",
      "offset": [
        1691,
        1695
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 7,
      "value": "0x1"
    },
    "753": {
      "fn": "Pool.vote",
      "offset": [
        1664,
        1688
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "754": {
      "fn": "Pool.vote",
      "offset": [
        1664,
        1688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "755": {
      "fn": "Pool.vote",
      "offset": [
        1664,
        1688
      ],
      "op": "ADD",
      "path": "1"
    },
    "756": {
      "fn": "Pool.vote",
      "offset": [
        1664,
        1695
      ],
      "op": "DUP1",
      "path": "1"
    },
    "757": {
      "fn": "Pool.vote",
      "offset": [
        1664,
        1695
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "758": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "760": {
      "op": "NOT"
    },
    "761": {
      "fn": "Pool.vote",
      "offset": [
        1664,
        1695
      ],
      "op": "AND",
      "path": "1"
    },
    "762": {
      "fn": "Pool.vote",
      "offset": [
        1664,
        1695
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "763": {
      "fn": "Pool.vote",
      "offset": [
        1664,
        1695
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "764": {
      "fn": "Pool.vote",
      "offset": [
        1664,
        1695
      ],
      "op": "OR",
      "path": "1"
    },
    "765": {
      "fn": "Pool.vote",
      "offset": [
        1664,
        1695
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "766": {
      "fn": "Pool.vote",
      "offset": [
        1664,
        1695
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "767": {
      "fn": "Pool.vote",
      "jump": "o",
      "offset": [
        1381,
        1702
      ],
      "op": "JUMP",
      "path": "1"
    },
    "768": {
      "offset": [
        503,
        530
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "769": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "771": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP2",
      "path": "1"
    },
    "772": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP2",
      "path": "1"
    },
    "773": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "774": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP2",
      "path": "1"
    },
    "775": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "LT",
      "path": "1"
    },
    "776": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x310"
    },
    "779": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "780": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "782": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP1",
      "path": "1"
    },
    "783": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "REVERT",
      "path": "1"
    },
    "784": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "785": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "786": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "788": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "789": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "791": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "793": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "794": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "795": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "797": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "MUL",
      "path": "1"
    },
    "798": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "ADD",
      "path": "1"
    },
    "799": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "801": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "802": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "POP",
      "path": "1"
    },
    "803": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "804": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "POP",
      "path": "1"
    },
    "805": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP1",
      "path": "1"
    },
    "806": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "808": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "ADD",
      "path": "1"
    },
    "809": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP1",
      "path": "1"
    },
    "810": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "811": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x333"
    },
    "814": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "815": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C0"
    },
    "818": {
      "fn": "Pool.vote",
      "jump": "i",
      "offset": [
        503,
        530
      ],
      "op": "JUMP",
      "path": "1"
    },
    "819": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "820": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP1",
      "path": "1"
    },
    "821": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "823": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "ADD",
      "path": "1"
    },
    "824": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "826": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP1",
      "path": "1"
    },
    "827": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "828": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DIV",
      "path": "1"
    },
    "829": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "MUL",
      "path": "1"
    },
    "830": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "832": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "ADD",
      "path": "1"
    },
    "833": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "835": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "836": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "837": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP2",
      "path": "1"
    },
    "838": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "ADD",
      "path": "1"
    },
    "839": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "841": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "842": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP1",
      "path": "1"
    },
    "843": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "844": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "845": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "846": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP2",
      "path": "1"
    },
    "847": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP2",
      "path": "1"
    },
    "848": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "849": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "851": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "ADD",
      "path": "1"
    },
    "852": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP3",
      "path": "1"
    },
    "853": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP1",
      "path": "1"
    },
    "854": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "855": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x35F"
    },
    "858": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "859": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C0"
    },
    "862": {
      "fn": "Pool.vote",
      "jump": "i",
      "offset": [
        503,
        530
      ],
      "op": "JUMP",
      "path": "1"
    },
    "863": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "864": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP1",
      "path": "1"
    },
    "865": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "866": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3AC"
    },
    "869": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "870": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP1",
      "path": "1"
    },
    "871": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "873": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "LT",
      "path": "1"
    },
    "874": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "877": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "878": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "881": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP1",
      "path": "1"
    },
    "882": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP4",
      "path": "1"
    },
    "883": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "884": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DIV",
      "path": "1"
    },
    "885": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "MUL",
      "path": "1"
    },
    "886": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP4",
      "path": "1"
    },
    "887": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "888": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "889": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "891": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "ADD",
      "path": "1"
    },
    "892": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "893": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3AC"
    },
    "896": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "JUMP",
      "path": "1"
    },
    "897": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "898": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP3",
      "path": "1"
    },
    "899": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "ADD",
      "path": "1"
    },
    "900": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "901": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "902": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "904": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "905": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "907": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "909": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "910": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "911": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "912": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP2",
      "path": "1"
    },
    "913": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "914": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP2",
      "path": "1"
    },
    "915": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "916": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "917": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "919": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "ADD",
      "path": "1"
    },
    "920": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "921": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "923": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "ADD",
      "path": "1"
    },
    "924": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP1",
      "path": "1"
    },
    "925": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP4",
      "path": "1"
    },
    "926": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "GT",
      "path": "1"
    },
    "927": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x38F"
    },
    "930": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "931": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP3",
      "path": "1"
    },
    "932": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "933": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SUB",
      "path": "1"
    },
    "934": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "936": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "AND",
      "path": "1"
    },
    "937": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP3",
      "path": "1"
    },
    "938": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "ADD",
      "path": "1"
    },
    "939": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "940": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "941": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "POP",
      "path": "1"
    },
    "942": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "POP",
      "path": "1"
    },
    "943": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "POP",
      "path": "1"
    },
    "944": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "POP",
      "path": "1"
    },
    "945": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "POP",
      "path": "1"
    },
    "946": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "947": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP1",
      "path": "1"
    },
    "948": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "950": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "ADD",
      "path": "1"
    },
    "951": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "952": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "953": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "POP",
      "path": "1"
    },
    "954": {
      "fn": "Pool.vote",
      "offset": [
        503,
        530
      ],
      "op": "DUP3",
      "path": "1"
    },
    "955": {
      "fn": "Pool.vote",
      "jump": "o",
      "offset": [
        503,
        530
      ],
      "op": "JUMP",
      "path": "1"
    },
    "956": {
      "offset": [
        173,
        195
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "957": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "959": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DUP1",
      "path": "1"
    },
    "960": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "961": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C9"
    },
    "964": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "965": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C0"
    },
    "968": {
      "fn": "Pool.vote",
      "jump": "i",
      "offset": [
        173,
        195
      ],
      "op": "JUMP",
      "path": "1"
    },
    "969": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "970": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DUP1",
      "path": "1"
    },
    "971": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "973": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "ADD",
      "path": "1"
    },
    "974": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "976": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DUP1",
      "path": "1"
    },
    "977": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "978": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DIV",
      "path": "1"
    },
    "979": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "MUL",
      "path": "1"
    },
    "980": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "982": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "ADD",
      "path": "1"
    },
    "983": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "985": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "986": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "987": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DUP2",
      "path": "1"
    },
    "988": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "ADD",
      "path": "1"
    },
    "989": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "991": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "992": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DUP1",
      "path": "1"
    },
    "993": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "994": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "995": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "996": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DUP2",
      "path": "1"
    },
    "997": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DUP2",
      "path": "1"
    },
    "998": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "999": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1001": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "ADD",
      "path": "1"
    },
    "1002": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1003": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1004": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1005": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F5"
    },
    "1008": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1009": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C0"
    },
    "1012": {
      "fn": "Pool.vote",
      "jump": "i",
      "offset": [
        173,
        195
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1013": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1014": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1015": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1016": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x442"
    },
    "1019": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1020": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1021": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1023": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "LT",
      "path": "1"
    },
    "1024": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x417"
    },
    "1027": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1028": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1031": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1032": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1033": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1034": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DIV",
      "path": "1"
    },
    "1035": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "MUL",
      "path": "1"
    },
    "1036": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1037": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1038": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1039": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1041": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "ADD",
      "path": "1"
    },
    "1042": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1043": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x442"
    },
    "1046": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1047": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1048": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1049": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "ADD",
      "path": "1"
    },
    "1050": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1051": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1052": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1054": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1055": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1057": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1059": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1060": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1061": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1062": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1063": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1064": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1065": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1066": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1067": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1069": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "ADD",
      "path": "1"
    },
    "1070": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1071": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1073": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "ADD",
      "path": "1"
    },
    "1074": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1075": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1076": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "GT",
      "path": "1"
    },
    "1077": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x425"
    },
    "1080": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1081": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1082": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1083": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "SUB",
      "path": "1"
    },
    "1084": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1086": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "AND",
      "path": "1"
    },
    "1087": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1088": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "ADD",
      "path": "1"
    },
    "1089": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1090": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1091": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "POP",
      "path": "1"
    },
    "1092": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "POP",
      "path": "1"
    },
    "1093": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "POP",
      "path": "1"
    },
    "1094": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "POP",
      "path": "1"
    },
    "1095": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "POP",
      "path": "1"
    },
    "1096": {
      "fn": "Pool.vote",
      "offset": [
        173,
        195
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1097": {
      "fn": "Pool.vote",
      "jump": "o",
      "offset": [
        173,
        195
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1098": {
      "offset": [
        201,
        219
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1099": {
      "fn": "Pool.vote",
      "offset": [
        201,
        219
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "1101": {
      "fn": "Pool.vote",
      "offset": [
        201,
        219
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1102": {
      "fn": "Pool.vote",
      "offset": [
        201,
        219
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1103": {
      "fn": "Pool.vote",
      "offset": [
        201,
        219
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C9"
    },
    "1106": {
      "fn": "Pool.vote",
      "offset": [
        201,
        219
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1107": {
      "fn": "Pool.vote",
      "offset": [
        201,
        219
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C0"
    },
    "1110": {
      "fn": "Pool.vote",
      "jump": "i",
      "offset": [
        201,
        219
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1111": {
      "offset": [
        92,
        114
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1112": {
      "fn": "Pool.vote",
      "offset": [
        92,
        114
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1114": {
      "fn": "Pool.vote",
      "offset": [
        92,
        114
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1115": {
      "fn": "Pool.vote",
      "offset": [
        92,
        114
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1116": {
      "fn": "Pool.vote",
      "offset": [
        92,
        114
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C9"
    },
    "1119": {
      "fn": "Pool.vote",
      "offset": [
        92,
        114
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1120": {
      "fn": "Pool.vote",
      "offset": [
        92,
        114
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C0"
    },
    "1123": {
      "fn": "Pool.vote",
      "jump": "i",
      "offset": [
        92,
        114
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1124": {
      "fn": "Pool.winningProposal",
      "offset": [
        1708,
        2065
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1125": {
      "fn": "Pool.winningProposal",
      "offset": [
        1768,
        1789
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1127": {
      "fn": "Pool.winningProposal",
      "offset": [
        1768,
        1789
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1128": {
      "fn": "Pool.winningProposal",
      "offset": [
        1768,
        1789
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1129": {
      "fn": "Pool.winningProposal",
      "offset": [
        1840,
        2059
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1130": {
      "fn": "Pool.winningProposal",
      "offset": [
        1861,
        1870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "1132": {
      "fn": "Pool.winningProposal",
      "offset": [
        1861,
        1877
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1133": {
      "fn": "Pool.winningProposal",
      "offset": [
        1857,
        1877
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1134": {
      "fn": "Pool.winningProposal",
      "offset": [
        1857,
        1877
      ],
      "op": "LT",
      "path": "1"
    },
    "1135": {
      "fn": "Pool.winningProposal",
      "offset": [
        1840,
        2059
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1136": {
      "fn": "Pool.winningProposal",
      "offset": [
        1840,
        2059
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4DC"
    },
    "1139": {
      "fn": "Pool.winningProposal",
      "offset": [
        1840,
        2059
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1140": {
      "fn": "Pool.winningProposal",
      "offset": [
        1923,
        1939
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1141": {
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1911
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "1143": {
      "fn": "Pool.winningProposal",
      "offset": [
        1912,
        1913
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1144": {
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1914
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1145": {
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1914
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1146": {
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1914
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1147": {
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1914
      ],
      "op": "LT",
      "path": "1"
    },
    "1148": {
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1914
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x487"
    },
    "1151": {
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1914
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1152": {
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1914
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x487"
    },
    "1155": {
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1914
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x77B"
    },
    "1158": {
      "fn": "Pool.winningProposal",
      "jump": "i",
      "offset": [
        1902,
        1914
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1159": {
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1914
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1160": {
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1914
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1161": {
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1914
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1163": {
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1914
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1164": {
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1914
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1166": {
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1914
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1168": {
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1914
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1169": {
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1914
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1170": {
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1914
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1172": {
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1914
      ],
      "op": "MUL",
      "path": "1"
    },
    "1173": {
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1914
      ],
      "op": "ADD",
      "path": "1"
    },
    "1174": {
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1920
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1176": {
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1920
      ],
      "op": "ADD",
      "path": "1"
    },
    "1177": {
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1920
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1178": {
      "branch": 13,
      "fn": "Pool.winningProposal",
      "offset": [
        1902,
        1939
      ],
      "op": "GT",
      "path": "1"
    },
    "1179": {
      "fn": "Pool.winningProposal",
      "offset": [
        1898,
        2049
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1180": {
      "fn": "Pool.winningProposal",
      "offset": [
        1898,
        2049
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4CA"
    },
    "1183": {
      "branch": 13,
      "fn": "Pool.winningProposal",
      "offset": [
        1898,
        2049
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1184": {
      "fn": "Pool.winningProposal",
      "offset": [
        1978,
        1987
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 8,
      "value": "0x6"
    },
    "1186": {
      "fn": "Pool.winningProposal",
      "offset": [
        1988,
        1989
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1187": {
      "fn": "Pool.winningProposal",
      "offset": [
        1978,
        1990
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1188": {
      "fn": "Pool.winningProposal",
      "offset": [
        1978,
        1990
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1189": {
      "fn": "Pool.winningProposal",
      "offset": [
        1978,
        1990
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1190": {
      "fn": "Pool.winningProposal",
      "offset": [
        1978,
        1990
      ],
      "op": "LT",
      "path": "1"
    },
    "1191": {
      "fn": "Pool.winningProposal",
      "offset": [
        1978,
        1990
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4B2"
    },
    "1194": {
      "fn": "Pool.winningProposal",
      "offset": [
        1978,
        1990
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1195": {
      "fn": "Pool.winningProposal",
      "offset": [
        1978,
        1990
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4B2"
    },
    "1198": {
      "fn": "Pool.winningProposal",
      "offset": [
        1978,
        1990
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x77B"
    },
    "1201": {
      "fn": "Pool.winningProposal",
      "jump": "i",
      "offset": [
        1978,
        1990
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1202": {
      "fn": "Pool.winningProposal",
      "offset": [
        1978,
        1990
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1203": {
      "fn": "Pool.winningProposal",
      "offset": [
        1978,
        1990
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1204": {
      "fn": "Pool.winningProposal",
      "offset": [
        1978,
        1990
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1206": {
      "fn": "Pool.winningProposal",
      "offset": [
        1978,
        1990
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1207": {
      "fn": "Pool.winningProposal",
      "offset": [
        1978,
        1990
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1209": {
      "fn": "Pool.winningProposal",
      "offset": [
        1978,
        1990
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1211": {
      "fn": "Pool.winningProposal",
      "offset": [
        1978,
        1990
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1212": {
      "fn": "Pool.winningProposal",
      "offset": [
        1978,
        1990
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1213": {
      "fn": "Pool.winningProposal",
      "offset": [
        1978,
        1990
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1215": {
      "fn": "Pool.winningProposal",
      "offset": [
        1978,
        1990
      ],
      "op": "MUL",
      "path": "1"
    },
    "1216": {
      "fn": "Pool.winningProposal",
      "offset": [
        1978,
        1990
      ],
      "op": "ADD",
      "path": "1"
    },
    "1217": {
      "fn": "Pool.winningProposal",
      "offset": [
        1978,
        1996
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1219": {
      "fn": "Pool.winningProposal",
      "offset": [
        1978,
        1996
      ],
      "op": "ADD",
      "path": "1"
    },
    "1220": {
      "fn": "Pool.winningProposal",
      "offset": [
        1978,
        1996
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1221": {
      "fn": "Pool.winningProposal",
      "offset": [
        1959,
        1996
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1222": {
      "fn": "Pool.winningProposal",
      "offset": [
        1959,
        1996
      ],
      "op": "POP",
      "path": "1"
    },
    "1223": {
      "fn": "Pool.winningProposal",
      "offset": [
        2033,
        2034
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 9
    },
    "1224": {
      "fn": "Pool.winningProposal",
      "offset": [
        2014,
        2034
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1225": {
      "fn": "Pool.winningProposal",
      "offset": [
        2014,
        2034
      ],
      "op": "POP",
      "path": "1"
    },
    "1226": {
      "fn": "Pool.winningProposal",
      "offset": [
        1898,
        2049
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1227": {
      "fn": "Pool.winningProposal",
      "offset": [
        1879,
        1882
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 10
    },
    "1228": {
      "fn": "Pool.winningProposal",
      "offset": [
        1879,
        1882
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4D4"
    },
    "1231": {
      "fn": "Pool.winningProposal",
      "offset": [
        1879,
        1882
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1232": {
      "fn": "Pool.winningProposal",
      "offset": [
        1879,
        1882
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7FA"
    },
    "1235": {
      "fn": "Pool.winningProposal",
      "jump": "i",
      "offset": [
        1879,
        1882
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1236": {
      "fn": "Pool.winningProposal",
      "offset": [
        1879,
        1882
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1237": {
      "fn": "Pool.winningProposal",
      "offset": [
        1879,
        1882
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1238": {
      "fn": "Pool.winningProposal",
      "offset": [
        1879,
        1882
      ],
      "op": "POP",
      "path": "1"
    },
    "1239": {
      "fn": "Pool.winningProposal",
      "offset": [
        1879,
        1882
      ],
      "op": "POP",
      "path": "1"
    },
    "1240": {
      "fn": "Pool.winningProposal",
      "offset": [
        1840,
        2059
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x469"
    },
    "1243": {
      "fn": "Pool.winningProposal",
      "offset": [
        1840,
        2059
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1244": {
      "fn": "Pool.winningProposal",
      "offset": [
        1840,
        2059
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1245": {
      "fn": "Pool.winningProposal",
      "offset": [
        1840,
        2059
      ],
      "op": "POP",
      "path": "1"
    },
    "1246": {
      "fn": "Pool.winningProposal",
      "offset": [
        1795,
        2065
      ],
      "op": "POP",
      "path": "1"
    },
    "1247": {
      "fn": "Pool.winningProposal",
      "offset": [
        1708,
        2065
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1248": {
      "fn": "Pool.winningProposal",
      "jump": "o",
      "offset": [
        1708,
        2065
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1249": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2077,
        2237
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1250": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2142,
        2167
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1252": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2197,
        2206
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 11,
      "value": "0x6"
    },
    "1254": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2207,
        2224
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4ED"
    },
    "1257": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2207,
        2222
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x464"
    },
    "1260": {
      "fn": "Pool.winnerProposalName",
      "jump": "i",
      "offset": [
        2207,
        2224
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1261": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2207,
        2224
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1262": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2197,
        2225
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1263": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2197,
        2225
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1264": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2197,
        2225
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1265": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2197,
        2225
      ],
      "op": "LT",
      "path": "1"
    },
    "1266": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2197,
        2225
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4FD"
    },
    "1269": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2197,
        2225
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1270": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2197,
        2225
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4FD"
    },
    "1273": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2197,
        2225
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x77B"
    },
    "1276": {
      "fn": "Pool.winnerProposalName",
      "jump": "i",
      "offset": [
        2197,
        2225
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1277": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2197,
        2225
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1278": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2197,
        2225
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1279": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2197,
        2225
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1281": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2197,
        2225
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1282": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2197,
        2225
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1284": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2197,
        2225
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1286": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2197,
        2225
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1287": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2197,
        2225
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1288": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2197,
        2225
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1290": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2197,
        2225
      ],
      "op": "MUL",
      "path": "1"
    },
    "1291": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2197,
        2225
      ],
      "op": "ADD",
      "path": "1"
    },
    "1292": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2197,
        2230
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1294": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2197,
        2230
      ],
      "op": "ADD",
      "path": "1"
    },
    "1295": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1296": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1297": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x519"
    },
    "1300": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1301": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C0"
    },
    "1304": {
      "fn": "Pool.winnerProposalName",
      "jump": "i",
      "offset": [
        2183,
        2230
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1305": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1306": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1307": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1309": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "ADD",
      "path": "1"
    },
    "1310": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1312": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1313": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1314": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "DIV",
      "path": "1"
    },
    "1315": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "MUL",
      "path": "1"
    },
    "1316": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1318": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "ADD",
      "path": "1"
    },
    "1319": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1321": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1322": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1323": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1324": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "ADD",
      "path": "1"
    },
    "1325": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1327": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1328": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1329": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1330": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1331": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1332": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1333": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1334": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1335": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1337": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "ADD",
      "path": "1"
    },
    "1338": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1339": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1340": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1341": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x545"
    },
    "1344": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1345": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C0"
    },
    "1348": {
      "fn": "Pool.winnerProposalName",
      "jump": "i",
      "offset": [
        2183,
        2230
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1349": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1350": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1351": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1352": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x592"
    },
    "1355": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1356": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1357": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1359": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "LT",
      "path": "1"
    },
    "1360": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x567"
    },
    "1363": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1364": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1367": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1368": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1369": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1370": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "DIV",
      "path": "1"
    },
    "1371": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "MUL",
      "path": "1"
    },
    "1372": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1373": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1374": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1375": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1377": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "ADD",
      "path": "1"
    },
    "1378": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1379": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x592"
    },
    "1382": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1383": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1384": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1385": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "ADD",
      "path": "1"
    },
    "1386": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1387": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1388": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1390": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1391": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1393": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1395": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1396": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1397": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1398": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1399": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1400": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1401": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1402": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1403": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1405": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "ADD",
      "path": "1"
    },
    "1406": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1407": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1409": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "ADD",
      "path": "1"
    },
    "1410": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1411": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1412": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "GT",
      "path": "1"
    },
    "1413": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x575"
    },
    "1416": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1417": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1418": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1419": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "SUB",
      "path": "1"
    },
    "1420": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1422": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "AND",
      "path": "1"
    },
    "1423": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1424": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "ADD",
      "path": "1"
    },
    "1425": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1426": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1427": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "POP",
      "path": "1"
    },
    "1428": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "POP",
      "path": "1"
    },
    "1429": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "POP",
      "path": "1"
    },
    "1430": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "POP",
      "path": "1"
    },
    "1431": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "POP",
      "path": "1"
    },
    "1432": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1433": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2183,
        2230
      ],
      "op": "POP",
      "path": "1"
    },
    "1434": {
      "fn": "Pool.winnerProposalName",
      "offset": [
        2077,
        2237
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1435": {
      "fn": "Pool.winnerProposalName",
      "jump": "o",
      "offset": [
        2077,
        2237
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1436": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2243,
        2393
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1439": {
      "op": "DUP1"
    },
    "1440": {
      "op": "MLOAD"
    },
    "1441": {
      "op": "DUP1"
    },
    "1442": {
      "op": "DUP3"
    },
    "1443": {
      "op": "ADD"
    },
    "1444": {
      "op": "SWAP1"
    },
    "1445": {
      "op": "SWAP2"
    },
    "1446": {
      "op": "MSTORE"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1449": {
      "op": "DUP2"
    },
    "1450": {
      "op": "MSTORE"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1455": {
      "op": "DUP3"
    },
    "1456": {
      "op": "ADD"
    },
    "1457": {
      "op": "MSTORE"
    },
    "1458": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2358,
        2367
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 12,
      "value": "0x6"
    },
    "1460": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2368,
        2385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5BB"
    },
    "1463": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2368,
        2383
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x464"
    },
    "1466": {
      "fn": "Pool.GETwinnerProposal",
      "jump": "i",
      "offset": [
        2368,
        2385
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1467": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2368,
        2385
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1468": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2358,
        2386
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1469": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2358,
        2386
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1470": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2358,
        2386
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1471": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2358,
        2386
      ],
      "op": "LT",
      "path": "1"
    },
    "1472": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2358,
        2386
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5CB"
    },
    "1475": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2358,
        2386
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1476": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2358,
        2386
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5CB"
    },
    "1479": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2358,
        2386
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x77B"
    },
    "1482": {
      "fn": "Pool.GETwinnerProposal",
      "jump": "i",
      "offset": [
        2358,
        2386
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1483": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2358,
        2386
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1484": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2358,
        2386
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1485": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2358,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1487": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2358,
        2386
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1488": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2358,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1490": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2358,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1492": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2358,
        2386
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1493": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2358,
        2386
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1494": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2358,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1496": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2358,
        2386
      ],
      "op": "MUL",
      "path": "1"
    },
    "1497": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2358,
        2386
      ],
      "op": "ADD",
      "path": "1"
    },
    "1498": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1500": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1501": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1502": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1504": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "ADD",
      "path": "1"
    },
    "1505": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1507": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1508": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1509": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1510": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1512": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1513": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "ADD",
      "path": "1"
    },
    "1514": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1515": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1516": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5F4"
    },
    "1519": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1520": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C0"
    },
    "1523": {
      "fn": "Pool.GETwinnerProposal",
      "jump": "i",
      "offset": [
        2347,
        2386
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1524": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1525": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1526": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1528": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "ADD",
      "path": "1"
    },
    "1529": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1531": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1532": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1533": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DIV",
      "path": "1"
    },
    "1534": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "MUL",
      "path": "1"
    },
    "1535": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1537": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "ADD",
      "path": "1"
    },
    "1538": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1540": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1541": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1542": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1543": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "ADD",
      "path": "1"
    },
    "1544": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1546": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1547": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1548": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1549": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1550": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1551": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1552": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1553": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1554": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1556": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "ADD",
      "path": "1"
    },
    "1557": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1558": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1559": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1560": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x620"
    },
    "1563": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1564": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C0"
    },
    "1567": {
      "fn": "Pool.GETwinnerProposal",
      "jump": "i",
      "offset": [
        2347,
        2386
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1568": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1569": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1570": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1571": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66D"
    },
    "1574": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1575": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1576": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1578": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "LT",
      "path": "1"
    },
    "1579": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x642"
    },
    "1582": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1583": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1586": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1587": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1588": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1589": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DIV",
      "path": "1"
    },
    "1590": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "MUL",
      "path": "1"
    },
    "1591": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1592": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1593": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1594": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1596": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "ADD",
      "path": "1"
    },
    "1597": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1598": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66D"
    },
    "1601": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1602": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1603": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1604": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "ADD",
      "path": "1"
    },
    "1605": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1606": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1607": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1609": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1610": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1612": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1614": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1615": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1616": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1617": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1618": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1619": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1620": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1621": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1622": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1624": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "ADD",
      "path": "1"
    },
    "1625": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1626": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1628": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "ADD",
      "path": "1"
    },
    "1629": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1630": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1631": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "GT",
      "path": "1"
    },
    "1632": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x650"
    },
    "1635": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1636": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1637": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1638": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SUB",
      "path": "1"
    },
    "1639": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1641": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "AND",
      "path": "1"
    },
    "1642": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1643": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "ADD",
      "path": "1"
    },
    "1644": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1645": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1646": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "POP",
      "path": "1"
    },
    "1647": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "POP",
      "path": "1"
    },
    "1648": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "POP",
      "path": "1"
    },
    "1649": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "POP",
      "path": "1"
    },
    "1650": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "POP",
      "path": "1"
    },
    "1651": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1652": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1653": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1655": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "ADD",
      "path": "1"
    },
    "1656": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1658": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1659": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "ADD",
      "path": "1"
    },
    "1660": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1661": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1662": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1663": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "POP",
      "path": "1"
    },
    "1664": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "POP",
      "path": "1"
    },
    "1665": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1666": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2347,
        2386
      ],
      "op": "POP",
      "path": "1"
    },
    "1667": {
      "fn": "Pool.GETwinnerProposal",
      "offset": [
        2243,
        2393
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1668": {
      "fn": "Pool.GETwinnerProposal",
      "jump": "o",
      "offset": [
        2243,
        2393
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1669": {
      "op": "JUMPDEST"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1674": {
      "op": "DUP3"
    },
    "1675": {
      "op": "DUP5"
    },
    "1676": {
      "op": "SUB"
    },
    "1677": {
      "op": "SLT"
    },
    "1678": {
      "op": "ISZERO"
    },
    "1679": {
      "op": "PUSH2",
      "value": "0x697"
    },
    "1682": {
      "op": "JUMPI"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1685": {
      "op": "DUP1"
    },
    "1686": {
      "op": "REVERT"
    },
    "1687": {
      "op": "JUMPDEST"
    },
    "1688": {
      "op": "POP"
    },
    "1689": {
      "op": "CALLDATALOAD"
    },
    "1690": {
      "op": "SWAP2"
    },
    "1691": {
      "op": "SWAP1"
    },
    "1692": {
      "op": "POP"
    },
    "1693": {
      "jump": "o",
      "op": "JUMP"
    },
    "1694": {
      "op": "JUMPDEST"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1697": {
      "op": "DUP2"
    },
    "1698": {
      "op": "MLOAD"
    },
    "1699": {
      "op": "DUP1"
    },
    "1700": {
      "op": "DUP5"
    },
    "1701": {
      "op": "MSTORE"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1704": {
      "op": "JUMPDEST"
    },
    "1705": {
      "op": "DUP2"
    },
    "1706": {
      "op": "DUP2"
    },
    "1707": {
      "op": "LT"
    },
    "1708": {
      "op": "ISZERO"
    },
    "1709": {
      "op": "PUSH2",
      "value": "0x6C4"
    },
    "1712": {
      "op": "JUMPI"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1715": {
      "op": "DUP2"
    },
    "1716": {
      "op": "DUP6"
    },
    "1717": {
      "op": "ADD"
    },
    "1718": {
      "op": "DUP2"
    },
    "1719": {
      "op": "ADD"
    },
    "1720": {
      "op": "MLOAD"
    },
    "1721": {
      "op": "DUP7"
    },
    "1722": {
      "op": "DUP4"
    },
    "1723": {
      "op": "ADD"
    },
    "1724": {
      "op": "DUP3"
    },
    "1725": {
      "op": "ADD"
    },
    "1726": {
      "op": "MSTORE"
    },
    "1727": {
      "op": "ADD"
    },
    "1728": {
      "op": "PUSH2",
      "value": "0x6A8"
    },
    "1731": {
      "op": "JUMP"
    },
    "1732": {
      "op": "JUMPDEST"
    },
    "1733": {
      "op": "POP"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1738": {
      "op": "DUP3"
    },
    "1739": {
      "op": "DUP7"
    },
    "1740": {
      "op": "ADD"
    },
    "1741": {
      "op": "ADD"
    },
    "1742": {
      "op": "MSTORE"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1745": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1747": {
      "op": "NOT"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1750": {
      "op": "DUP4"
    },
    "1751": {
      "op": "ADD"
    },
    "1752": {
      "op": "AND"
    },
    "1753": {
      "op": "DUP6"
    },
    "1754": {
      "op": "ADD"
    },
    "1755": {
      "op": "ADD"
    },
    "1756": {
      "op": "SWAP2"
    },
    "1757": {
      "op": "POP"
    },
    "1758": {
      "op": "POP"
    },
    "1759": {
      "op": "SWAP3"
    },
    "1760": {
      "op": "SWAP2"
    },
    "1761": {
      "op": "POP"
    },
    "1762": {
      "op": "POP"
    },
    "1763": {
      "jump": "o",
      "op": "JUMP"
    },
    "1764": {
      "op": "JUMPDEST"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1767": {
      "op": "DUP2"
    },
    "1768": {
      "op": "MSTORE"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1771": {
      "op": "PUSH2",
      "value": "0x6F7"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1776": {
      "op": "DUP4"
    },
    "1777": {
      "op": "ADD"
    },
    "1778": {
      "op": "DUP6"
    },
    "1779": {
      "op": "PUSH2",
      "value": "0x69E"
    },
    "1782": {
      "jump": "i",
      "op": "JUMP"
    },
    "1783": {
      "op": "JUMPDEST"
    },
    "1784": {
      "op": "SWAP1"
    },
    "1785": {
      "op": "POP"
    },
    "1786": {
      "op": "DUP3"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1789": {
      "op": "DUP4"
    },
    "1790": {
      "op": "ADD"
    },
    "1791": {
      "op": "MSTORE"
    },
    "1792": {
      "op": "SWAP4"
    },
    "1793": {
      "op": "SWAP3"
    },
    "1794": {
      "op": "POP"
    },
    "1795": {
      "op": "POP"
    },
    "1796": {
      "op": "POP"
    },
    "1797": {
      "jump": "o",
      "op": "JUMP"
    },
    "1798": {
      "op": "JUMPDEST"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1801": {
      "op": "DUP2"
    },
    "1802": {
      "op": "MSTORE"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1805": {
      "op": "PUSH2",
      "value": "0x719"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1810": {
      "op": "DUP4"
    },
    "1811": {
      "op": "ADD"
    },
    "1812": {
      "op": "DUP5"
    },
    "1813": {
      "op": "PUSH2",
      "value": "0x69E"
    },
    "1816": {
      "jump": "i",
      "op": "JUMP"
    },
    "1817": {
      "op": "JUMPDEST"
    },
    "1818": {
      "op": "SWAP4"
    },
    "1819": {
      "op": "SWAP3"
    },
    "1820": {
      "op": "POP"
    },
    "1821": {
      "op": "POP"
    },
    "1822": {
      "op": "POP"
    },
    "1823": {
      "jump": "o",
      "op": "JUMP"
    },
    "1824": {
      "op": "JUMPDEST"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1829": {
      "op": "DUP3"
    },
    "1830": {
      "op": "DUP5"
    },
    "1831": {
      "op": "SUB"
    },
    "1832": {
      "op": "SLT"
    },
    "1833": {
      "op": "ISZERO"
    },
    "1834": {
      "op": "PUSH2",
      "value": "0x732"
    },
    "1837": {
      "op": "JUMPI"
    },
    "1838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1840": {
      "op": "DUP1"
    },
    "1841": {
      "op": "REVERT"
    },
    "1842": {
      "op": "JUMPDEST"
    },
    "1843": {
      "op": "DUP2"
    },
    "1844": {
      "op": "CALLDATALOAD"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1851": {
      "op": "SHL"
    },
    "1852": {
      "op": "SUB"
    },
    "1853": {
      "op": "DUP2"
    },
    "1854": {
      "op": "AND"
    },
    "1855": {
      "op": "DUP2"
    },
    "1856": {
      "op": "EQ"
    },
    "1857": {
      "op": "PUSH2",
      "value": "0x719"
    },
    "1860": {
      "op": "JUMPI"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1863": {
      "op": "DUP1"
    },
    "1864": {
      "op": "REVERT"
    },
    "1865": {
      "op": "JUMPDEST"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1868": {
      "op": "DUP2"
    },
    "1869": {
      "op": "MSTORE"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1872": {
      "op": "DUP3"
    },
    "1873": {
      "op": "MLOAD"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1878": {
      "op": "DUP5"
    },
    "1879": {
      "op": "ADD"
    },
    "1880": {
      "op": "MSTORE"
    },
    "1881": {
      "op": "PUSH2",
      "value": "0x765"
    },
    "1884": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1886": {
      "op": "DUP5"
    },
    "1887": {
      "op": "ADD"
    },
    "1888": {
      "op": "DUP3"
    },
    "1889": {
      "op": "PUSH2",
      "value": "0x69E"
    },
    "1892": {
      "jump": "i",
      "op": "JUMP"
    },
    "1893": {
      "op": "JUMPDEST"
    },
    "1894": {
      "op": "SWAP1"
    },
    "1895": {
      "op": "POP"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1898": {
      "op": "DUP5"
    },
    "1899": {
      "op": "ADD"
    },
    "1900": {
      "op": "MLOAD"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1903": {
      "op": "DUP5"
    },
    "1904": {
      "op": "ADD"
    },
    "1905": {
      "op": "MSTORE"
    },
    "1906": {
      "op": "DUP1"
    },
    "1907": {
      "op": "SWAP2"
    },
    "1908": {
      "op": "POP"
    },
    "1909": {
      "op": "POP"
    },
    "1910": {
      "op": "SWAP3"
    },
    "1911": {
      "op": "SWAP2"
    },
    "1912": {
      "op": "POP"
    },
    "1913": {
      "op": "POP"
    },
    "1914": {
      "jump": "o",
      "op": "JUMP"
    },
    "1915": {
      "op": "JUMPDEST"
    },
    "1916": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1923": {
      "op": "SHL"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1926": {
      "op": "MSTORE"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1929": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1931": {
      "op": "MSTORE"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1936": {
      "op": "REVERT"
    },
    "1937": {
      "op": "JUMPDEST"
    },
    "1938": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1945": {
      "op": "SHL"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1948": {
      "op": "MSTORE"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1953": {
      "op": "MSTORE"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1958": {
      "op": "REVERT"
    },
    "1959": {
      "op": "JUMPDEST"
    },
    "1960": {
      "op": "DUP1"
    },
    "1961": {
      "op": "DUP3"
    },
    "1962": {
      "op": "ADD"
    },
    "1963": {
      "op": "DUP1"
    },
    "1964": {
      "op": "DUP3"
    },
    "1965": {
      "op": "GT"
    },
    "1966": {
      "op": "ISZERO"
    },
    "1967": {
      "op": "PUSH2",
      "value": "0x7BA"
    },
    "1970": {
      "op": "JUMPI"
    },
    "1971": {
      "op": "PUSH2",
      "value": "0x7BA"
    },
    "1974": {
      "op": "PUSH2",
      "value": "0x791"
    },
    "1977": {
      "jump": "i",
      "op": "JUMP"
    },
    "1978": {
      "op": "JUMPDEST"
    },
    "1979": {
      "op": "SWAP3"
    },
    "1980": {
      "op": "SWAP2"
    },
    "1981": {
      "op": "POP"
    },
    "1982": {
      "op": "POP"
    },
    "1983": {
      "jump": "o",
      "op": "JUMP"
    },
    "1984": {
      "op": "JUMPDEST"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1987": {
      "op": "DUP2"
    },
    "1988": {
      "op": "DUP2"
    },
    "1989": {
      "op": "SHR"
    },
    "1990": {
      "op": "SWAP1"
    },
    "1991": {
      "op": "DUP3"
    },
    "1992": {
      "op": "AND"
    },
    "1993": {
      "op": "DUP1"
    },
    "1994": {
      "op": "PUSH2",
      "value": "0x7D4"
    },
    "1997": {
      "op": "JUMPI"
    },
    "1998": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2000": {
      "op": "DUP3"
    },
    "2001": {
      "op": "AND"
    },
    "2002": {
      "op": "SWAP2"
    },
    "2003": {
      "op": "POP"
    },
    "2004": {
      "op": "JUMPDEST"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2007": {
      "op": "DUP3"
    },
    "2008": {
      "op": "LT"
    },
    "2009": {
      "op": "DUP2"
    },
    "2010": {
      "op": "SUB"
    },
    "2011": {
      "op": "PUSH2",
      "value": "0x7F4"
    },
    "2014": {
      "op": "JUMPI"
    },
    "2015": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2022": {
      "op": "SHL"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2025": {
      "op": "MSTORE"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2030": {
      "op": "MSTORE"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2035": {
      "op": "REVERT"
    },
    "2036": {
      "op": "JUMPDEST"
    },
    "2037": {
      "op": "POP"
    },
    "2038": {
      "op": "SWAP2"
    },
    "2039": {
      "op": "SWAP1"
    },
    "2040": {
      "op": "POP"
    },
    "2041": {
      "jump": "o",
      "op": "JUMP"
    },
    "2042": {
      "op": "JUMPDEST"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2047": {
      "op": "DUP3"
    },
    "2048": {
      "op": "ADD"
    },
    "2049": {
      "op": "PUSH2",
      "value": "0x80C"
    },
    "2052": {
      "op": "JUMPI"
    },
    "2053": {
      "op": "PUSH2",
      "value": "0x80C"
    },
    "2056": {
      "op": "PUSH2",
      "value": "0x791"
    },
    "2059": {
      "jump": "i",
      "op": "JUMP"
    },
    "2060": {
      "op": "JUMPDEST"
    },
    "2061": {
      "op": "POP"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2064": {
      "op": "ADD"
    },
    "2065": {
      "op": "SWAP1"
    },
    "2066": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d4757832003626b61202828e98eaae301ae2e5d0",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.8.2 <0.9.0;\n\n\ncontract Pool {\n\n    string public question;\n\n    uint deploy_time;\n    uint start;\n    uint end;\n    string public img_ipfs;\n    string public link;\n\n    struct Proposal {\n        string name;\n        uint count;\n    }\n\n    struct Voter {\n        uint weight; // weight is accumulated by delegation\n        bool voted;  // if true, that person already voted\n        uint vote_proposal;  // index of the voted proposal\n \n    }\n\n    Proposal[] public proposals;\n\n    mapping(address => Voter) public voters;\n\n    modifier timer() {\n        require(block.timestamp < end);\n        _;\n    }\n\n\n    constructor (string memory _question, string[] memory _proposals, string memory _img, string memory _link){\n        question = _question;\n        deploy_time = block.timestamp;\n        start = block.timestamp;\n        end = block.timestamp + 24 hours;\n        img_ipfs = _img;\n        link = _link;\n\n\n        for (uint i=0; i < _proposals.length; i++){\n            proposals.push(Proposal({\n                name: _proposals[i],\n                count: 0\n            }));\n        }\n    }\n\n    function addVoter(address _voter) public {\n        Voter memory voter = Voter(1,false,0);\n        voters[_voter] = voter;\n    }\n\n\n    \n    function GetQuestion() public view returns(uint)  {\n        return end;\n    }\n\n\n\n\n    function vote(uint proposal) public timer {\n        require(voters[msg.sender].weight >0, \"Cette address n'a pas assez de Weight pour voter\");\n        proposals[proposal].count += 1;\n        voters[msg.sender].weight = 0;\n        voters[msg.sender].vote_proposal = proposal;\n        voters[msg.sender].voted = true;\n    }\n\n    function winningProposal() public view\n            returns (uint winningProposal_)\n    {\n        uint winningVoteCount = 0;\n        for (uint p = 0; p < proposals.length; p++) {\n            if (proposals[p].count > winningVoteCount) {\n                winningVoteCount = proposals[p].count;\n                winningProposal_ = p;\n            }\n        }\n    }\n\n     \n    function winnerProposalName() external view\n            returns (string memory winnerName_)\n    {\n        winnerName_ = proposals[winningProposal()].name;\n    }\n\n    function GETwinnerProposal() external view\n            returns (Proposal memory winnerP_)\n    {\n        winnerP_ = proposals[winningProposal()];\n    }\n\n\n     //function return length of proposals\n    function getProposalsLength() public view returns (uint256) {\n        return proposals.length;\n    }\n\n    \n\n\n\n}",
  "sourceMap": "71:2483:1:-:0;;;665:485;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;781:8;:20;792:9;781:8;:20;:::i;:::-;-1:-1:-1;825:15:1;811:11;:29;;;850:5;:23;;;889:26;;907:8;889:26;:::i;:::-;883:3;:32;925:8;:15;936:4;925:8;:15;:::i;:::-;-1:-1:-1;950:4:1;:12;957:5;950:4;:12;:::i;:::-;;979:6;974:170;993:10;:17;989:1;:21;974:170;;;1030:9;1045:87;;;;;;;;1078:10;1089:1;1078:13;;;;;;;;:::i;:::-;;;;;;;;;;;;1045:87;;1116:1;1045:87;;;;;;1030:103;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;1012:3;;;;;:::i;:::-;;;;974:170;;;;665:485;;;;71:2483;;14:127:2;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:2;247:40;;-1:-1:-1;;;;;302:34:2;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:2:o;426:650::-;480:5;533:3;526:4;518:6;514:17;510:27;500:55;;551:1;548;541:12;500:55;574:13;;-1:-1:-1;;;;;599:26:2;;596:52;;;628:18;;:::i;:::-;667:4;695:53;738:2;719:13;;-1:-1:-1;;715:27:2;711:36;;695:53;:::i;:::-;773:2;764:7;757:19;817:3;812:2;807;799:6;795:15;791:24;788:33;785:53;;;834:1;831;824:12;785:53;856:1;866:134;880:2;877:1;874:9;866:134;;;969:14;;;965:23;;959:30;937:15;;;933:24;;926:64;891:10;;866:134;;;-1:-1:-1;1043:1:2;1020:16;;;1016:25;;;1009:36;;;;1024:7;426:650;-1:-1:-1;;;426:650:2:o;1081:1781::-;1243:6;1251;1259;1267;1320:3;1308:9;1299:7;1295:23;1291:33;1288:53;;;1337:1;1334;1327:12;1288:53;1364:16;;-1:-1:-1;;;;;1429:14:2;;;1426:34;;;1456:1;1453;1446:12;1426:34;1479:61;1532:7;1523:6;1512:9;1508:22;1479:61;:::i;:::-;1469:71;;1559:2;1549:12;;1607:2;1596:9;1592:18;1586:25;1636:2;1626:8;1623:16;1620:36;;;1652:1;1649;1642:12;1620:36;1675:24;;1730:4;1722:13;;1718:27;-1:-1:-1;1708:55:2;;1759:1;1756;1749:12;1708:55;1788:2;1782:9;1810:2;1806;1803:10;1800:36;;;1816:18;;:::i;:::-;1862:2;1859:1;1855:10;1885:28;1909:2;1905;1901:11;1885:28;:::i;:::-;1947:15;;;2017:11;;;2013:20;;;1978:12;;;;2045:19;;;2042:39;;;2077:1;2074;2067:12;2042:39;2109:2;2105;2101:11;2090:22;;2121:357;2137:6;2132:3;2129:15;2121:357;;;2216:3;2210:10;2252:2;2239:11;2236:19;2233:109;;;2296:1;2325:2;2321;2314:14;2233:109;2367:68;2427:7;2422:2;2408:11;2404:2;2400:20;2396:29;2367:68;:::i;:::-;2355:81;;-1:-1:-1;2154:12:2;;;;2456;;;;2121:357;;;2497:5;2487:15;;;;;;;2548:2;2537:9;2533:18;2527:25;2511:41;;2577:2;2567:8;2564:16;2561:36;;;2593:1;2590;2583:12;2561:36;2616:63;2671:7;2660:8;2649:9;2645:24;2616:63;:::i;:::-;2606:73;;2725:2;2714:9;2710:18;2704:25;2688:41;;2754:2;2744:8;2741:16;2738:36;;;2770:1;2767;2760:12;2738:36;;2793:63;2848:7;2837:8;2826:9;2822:24;2793:63;:::i;:::-;2783:73;;;1081:1781;;;;;;;:::o;2867:380::-;2946:1;2942:12;;;;2989;;;3010:61;;3064:4;3056:6;3052:17;3042:27;;3010:61;3117:2;3109:6;3106:14;3086:18;3083:38;3080:161;;3163:10;3158:3;3154:20;3151:1;3144:31;3198:4;3195:1;3188:15;3226:4;3223:1;3216:15;3080:161;;2867:380;;;:::o;3378:545::-;3480:2;3475:3;3472:11;3469:448;;;3516:1;3541:5;3537:2;3530:17;3586:4;3582:2;3572:19;3656:2;3644:10;3640:19;3637:1;3633:27;3627:4;3623:38;3692:4;3680:10;3677:20;3674:47;;;-1:-1:-1;3715:4:2;3674:47;3770:2;3765:3;3761:12;3758:1;3754:20;3748:4;3744:31;3734:41;;3825:82;3843:2;3836:5;3833:13;3825:82;;;3888:17;;;3869:1;3858:13;3825:82;;;3829:3;;;3469:448;3378:545;;;:::o;4099:1352::-;4219:10;;-1:-1:-1;;;;;4241:30:2;;4238:56;;;4274:18;;:::i;:::-;4303:97;4393:6;4353:38;4385:4;4379:11;4353:38;:::i;:::-;4347:4;4303:97;:::i;:::-;4455:4;;4519:2;4508:14;;4536:1;4531:663;;;;5238:1;5255:6;5252:89;;;-1:-1:-1;5307:19:2;;;5301:26;5252:89;-1:-1:-1;;4056:1:2;4052:11;;;4048:24;4044:29;4034:40;4080:1;4076:11;;;4031:57;5354:81;;4501:944;;4531:663;3325:1;3318:14;;;3362:4;3349:18;;-1:-1:-1;;4567:20:2;;;4685:236;4699:7;4696:1;4693:14;4685:236;;;4788:19;;;4782:26;4767:42;;4880:27;;;;4848:1;4836:14;;;;4715:19;;4685:236;;;4689:3;4949:6;4940:7;4937:19;4934:201;;;5010:19;;;5004:26;-1:-1:-1;;5093:1:2;5089:14;;;5105:3;5085:24;5081:37;5077:42;5062:58;5047:74;;4934:201;-1:-1:-1;;;;;5181:1:2;5165:14;;;5161:22;5148:36;;-1:-1:-1;4099:1352:2:o;5456:127::-;5517:10;5512:3;5508:20;5505:1;5498:31;5548:4;5545:1;5538:15;5572:4;5569:1;5562:15;5588:125;5653:9;;;5674:10;;;5671:36;;;5687:18;;:::i;:::-;5588:125;;;;:::o;5718:127::-;5779:10;5774:3;5770:20;5767:1;5760:31;5810:4;5807:1;5800:15;5834:4;5831:1;5824:15;5850:135;5889:3;5910:17;;;5907:43;;5930:18;;:::i;:::-;-1:-1:-1;5977:1:2;5966:13;;5850:135::o;:::-;71:2483:1;;;;;;",
  "sourcePath": "contracts/Pool.sol",
  "type": "contract"
}